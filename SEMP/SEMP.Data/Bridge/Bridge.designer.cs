#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SEMP.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="ModSeguridad")]
	public partial class BridgeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertNamedEntity(NamedEntity instance);
    partial void UpdateNamedEntity(NamedEntity instance);
    partial void DeleteNamedEntity(NamedEntity instance);
    partial void InsertNamedEntityS(NamedEntityS instance);
    partial void UpdateNamedEntityS(NamedEntityS instance);
    partial void DeleteNamedEntityS(NamedEntityS instance);
    #endregion
		
		public BridgeDataContext() : 
				base(@"Data Source=amrndhw3657.amer.pfizer.com\dev1;Initial Catalog=MuestrasMedicas_Entrega_C" +
						"L;User ID=bue-a-mmpersonal;Password=Bue-a-mmpersonal", mappingSource)
		{
			OnCreated();
		}
		
		public BridgeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BridgeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BridgeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BridgeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<NamedEntity> NamedEntities
		{
			get
			{
				return this.GetTable<NamedEntity>();
			}
		}
		
		public System.Data.Linq.Table<Word> Words
		{
			get
			{
				return this.GetTable<Word>();
			}
		}
		
		public System.Data.Linq.Table<SolicitudeToPrintResult> SolicitudeToPrintResults
		{
			get
			{
				return this.GetTable<SolicitudeToPrintResult>();
			}
		}
		
		public System.Data.Linq.Table<NamedEntityS> NamedEntitiesS
		{
			get
			{
				return this.GetTable<NamedEntityS>();
			}
		}
		
		[Function(Name="dbo.pPPP2_Language_Select")]
		internal ISingleResult<Language> LanguageSelect([Parameter(DbType="VarChar(100)")] string sName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sName);
			return ((ISingleResult<Language>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_Language_Select")]
		internal ISingleResult<NamedEntity> LanguageSelectAsNamedEntity([Parameter(DbType="VarChar(100)")] string sName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sName);
			return ((ISingleResult<NamedEntity>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_Word_Select")]
		internal ISingleResult<Word> WordSelect([Parameter(DbType="Int")] System.Nullable<int> nLanguageID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nLanguageID);
			return ((ISingleResult<Word>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Usuarios_Consul")]
		internal ISingleResult<Usuarios_ConsulResult> ModSegGetProfileID([Parameter(Name="C_Modulo", DbType="VarChar(20)")] string c_Modulo, [Parameter(Name="C_Usuario", DbType="VarChar(20)")] string c_Usuario, [Parameter(DbType="TinyInt")] System.Nullable<byte> bLoguea)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), c_Modulo, c_Usuario, bLoguea);
			return ((ISingleResult<Usuarios_ConsulResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ObtenerIDUsuario_ByCodigoNT")]
		internal ISingleResult<ObtenerIDUsuario_ByCodigoNTResult> ModSegGetUserID([Parameter(Name="UsuarioNT", DbType="VarChar(20)")] string usuarioNT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usuarioNT);
			return ((ISingleResult<ObtenerIDUsuario_ByCodigoNTResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_EmployIDByNTUser")]
		internal ISingleResult<ObtenerEmplIDUsuario_ByCodigoNTResult> ModSegGetEmployeeID([Parameter(Name="UsuarioNT", DbType="VarChar(20)")] string usuarioNT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usuarioNT);
			return ((ISingleResult<ObtenerEmplIDUsuario_ByCodigoNTResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SEMP_GetUserNameBYNTID")]
		internal ISingleResult<ObtenerNombreUsuario_ByCodigoNTResult> ModSegGetUserName([Parameter(DbType="VarChar(20)")] string sNTUsername)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sNTUsername);
			return ((ISingleResult<ObtenerNombreUsuario_ByCodigoNTResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.MenuesPorPerfil_Consul")]
		internal ISingleResult<Menu> ModSegGetUserMenu([Parameter(Name="C_Modulo", DbType="VarChar(20)")] string c_Modulo, [Parameter(Name="ID_Perfil", DbType="Int")] System.Nullable<long> iD_Perfil)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), c_Modulo, iD_Perfil);
			return ((ISingleResult<Menu>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_RejectionReason_Select")]
		internal ISingleResult<RejectionReason> RejectionReasonSelect([Parameter(DbType="Int")] System.Nullable<int> nRejectionReasonID, [Parameter(DbType="Varchar(100)")] string sName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nRejectionReasonID, sName);
			return ((ISingleResult<RejectionReason>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_RejectionReason_Select")]
		internal ISingleResult<NamedEntity> RejectionReasonSelectAsNamedEntity([Parameter(DbType="Int")] System.Nullable<int> nRejectionReasonID, [Parameter(DbType="Varchar(100)")] string sName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nRejectionReasonID, sName);
			return ((ISingleResult<NamedEntity>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_RejectionReason_Save")]
		internal int RejectionReasonSave([Parameter(DbType="Int")] System.Nullable<int> nRejectionReasonID, [Parameter(DbType="Varchar(100)")] string sName, [Parameter(DbType="Int")] System.Nullable<long> LangID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nRejectionReasonID, sName, LangID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_RejectionReason_Delete")]
		internal int RejectionReasonDelete([Parameter(DbType="Int")] System.Nullable<int> nRejectionReasonID, [Parameter(DbType="Int")] System.Nullable<long> LangID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nRejectionReasonID, LangID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Product_Select")]
		internal ISingleResult<NamedEntity> ProductSelectAsNamedEntity([Parameter(DbType="Int")] System.Nullable<int> nID, [Parameter(DbType="Varchar(100)")] string sName, [Parameter(DbType="Varchar(20)")] string sProductOrigin, [Parameter(DbType="Bit")] System.Nullable<bool> bActive, [Parameter(DbType="Int")] System.Nullable<int> nMonthlyAmount, [Parameter(DbType="Int")] System.Nullable<int> nAnnualAmount, [Parameter(DbType="Bit")] System.Nullable<bool> bColdChain, [Parameter(DbType="Int")] System.Nullable<int> nReplenishPoint, [Parameter(DbType="Int")] System.Nullable<int> nMaxAge, [Parameter(DbType="Int")] System.Nullable<int> nUnitPackage, [Parameter(DbType="Int")] System.Nullable<int> nLangID, [Parameter(DbType="Varchar(30)")] string sUser, [Parameter(DbType="Int")] System.Nullable<int> nIdUsuario)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nID, sName, sProductOrigin, bActive, nMonthlyAmount, nAnnualAmount, bColdChain, nReplenishPoint, nMaxAge, nUnitPackage, nLangID, sUser, nIdUsuario);
			return ((ISingleResult<NamedEntity>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Product_Select")]
		internal ISingleResult<Product> ProductSelect([Parameter(DbType="Int")] System.Nullable<int> nID, [Parameter(DbType="Varchar(100)")] string sName, [Parameter(DbType="Varchar(20)")] string sProductOrigin, [Parameter(DbType="Bit")] System.Nullable<bool> bActive, [Parameter(DbType="Int")] System.Nullable<int> nMonthlyAmount, [Parameter(DbType="Int")] System.Nullable<int> nAnnualAmount, [Parameter(DbType="Bit")] System.Nullable<bool> bColdChain, [Parameter(DbType="Int")] System.Nullable<int> nReplenishPoint, [Parameter(DbType="Int")] System.Nullable<int> nMaxAge, [Parameter(DbType="Int")] System.Nullable<int> nUnitPackage, [Parameter(DbType="Int")] System.Nullable<int> nLangID, [Parameter(DbType="Varchar(30)")] string sUser, [Parameter(DbType="Int")] System.Nullable<int> nIdUsuario)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nID, sName, sProductOrigin, bActive, nMonthlyAmount, nAnnualAmount, bColdChain, nReplenishPoint, nMaxAge, nUnitPackage, nLangID, sUser, nIdUsuario);
			return ((ISingleResult<Product>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Product_Save")]
		internal int ProductSave([Parameter(DbType="Int")] System.Nullable<int> nID, [Parameter(DbType="Varchar(100)")] string sName, [Parameter(DbType="Varchar(20)")] string sProductOrigin, [Parameter(DbType="Bit")] System.Nullable<bool> bActive, [Parameter(DbType="Int")] System.Nullable<int> nMonthlyAmount, [Parameter(DbType="Int")] System.Nullable<int> nAnnualAmount, [Parameter(DbType="Bit")] System.Nullable<bool> bColdChain, [Parameter(DbType="Int")] System.Nullable<int> nReplenishPoint, [Parameter(DbType="Int")] System.Nullable<int> nMaxAge, [Parameter(DbType="Int")] System.Nullable<int> nUnitPackage, [Parameter(DbType="Int")] System.Nullable<int> nLangID, [Parameter(DbType="Varchar(30)")] string sUser, [Parameter(DbType="Int")] System.Nullable<int> nIdUsuario)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nID, sName, sProductOrigin, bActive, nMonthlyAmount, nAnnualAmount, bColdChain, nReplenishPoint, nMaxAge, nUnitPackage, nLangID, sUser, nIdUsuario);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_Product_Delete")]
		internal int ProductDelete([Parameter(DbType="Int")] System.Nullable<int> nID, [Parameter(DbType="Int")] System.Nullable<int> nLangID, [Parameter(DbType="Varchar(30)")] string sUser)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nID, nLangID, sUser);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_ProductOrigin_Select")]
		internal ISingleResult<NamedEntityS> ProductOriginSelectAsNamedEntityS([Parameter(DbType="Varchar(100)")] string sID, [Parameter(DbType="Varchar(100)")] string sName, [Parameter(DbType="Int")] System.Nullable<int> nLangID, [Parameter(DbType="Varchar(30)")] string sUser, [Parameter(DbType="Int")] System.Nullable<int> nUsuarioID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sID, sName, nLangID, sUser, nUsuarioID);
			return ((ISingleResult<NamedEntityS>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_SolicitorKind_Save2")]
		internal int SolicitorKindSave([Parameter(DbType="Int")] System.Nullable<int> nSolicitorKindID, [Parameter(DbType="VarChar(200)")] string sName, [Parameter(DbType="Bit")] System.Nullable<bool> bRequestsWithoutStock, [Parameter(DbType="Int")] System.Nullable<int> nMaxProductAmmountPerRequest, [Parameter(DbType="Int")] System.Nullable<int> nMaxProductAmmountPerMonth, [Parameter(DbType="Int")] System.Nullable<int> nMaxValidTime, [Parameter(DbType="Int")] System.Nullable<int> nMaxRequestsPerMonth, [Parameter(DbType="XML")] string xmlProductSolicitorKind, [Parameter(DbType="Int")] System.Nullable<long> LangID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nSolicitorKindID, sName, bRequestsWithoutStock, nMaxProductAmmountPerRequest, nMaxProductAmmountPerMonth, nMaxValidTime, nMaxRequestsPerMonth, xmlProductSolicitorKind, LangID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_SolicitorKind_Select2")]
		internal ISingleResult<SolicitorKind> SolicitorKindSelect([Parameter(DbType="Int")] System.Nullable<int> nSolicitorKindID, [Parameter(DbType="VarChar(200)")] string sName, [Parameter(DbType="Bit")] System.Nullable<bool> bRequestsWithoutStock, [Parameter(DbType="Int")] System.Nullable<int> nMaxProductAmmountPerRequest, [Parameter(DbType="Int")] System.Nullable<int> nMaxProductAmmountPerMonth, [Parameter(DbType="Int")] System.Nullable<int> nMaxValidTime, [Parameter(DbType="Int")] System.Nullable<int> nMaxRequestsPerMonth, [Parameter(DbType="Int")] System.Nullable<int> sUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nSolicitorKindID, sName, bRequestsWithoutStock, nMaxProductAmmountPerRequest, nMaxProductAmmountPerMonth, nMaxValidTime, nMaxRequestsPerMonth, sUserID);
			return ((ISingleResult<SolicitorKind>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_SolicitorKind_Select2")]
		internal ISingleResult<NamedEntity> SolicitorKindSelectAsNamedEntity([Parameter(DbType="Int")] System.Nullable<int> nSolicitorKindID, [Parameter(DbType="VarChar(200)")] string sName, [Parameter(DbType="Bit")] System.Nullable<bool> bRequestsWithoutStock, [Parameter(DbType="Int")] System.Nullable<int> nMaxProductAmmountPerRequest, [Parameter(DbType="Int")] System.Nullable<int> nMaxProductAmmountPerMonth, [Parameter(DbType="Int")] System.Nullable<int> nMaxValidTime, [Parameter(DbType="Int")] System.Nullable<int> nMaxRequestsPerMonth, [Parameter(DbType="Int")] System.Nullable<int> sUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nSolicitorKindID, sName, bRequestsWithoutStock, nMaxProductAmmountPerRequest, nMaxProductAmmountPerMonth, nMaxValidTime, nMaxRequestsPerMonth, sUserID);
			return ((ISingleResult<NamedEntity>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_SolicitorKind_Delete")]
		internal int SolicitorKindDelete([Parameter(DbType="Int")] System.Nullable<int> nSolicitorKindID, [Parameter(DbType="Int")] System.Nullable<long> nLangID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nSolicitorKindID, nLangID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_SUser_Save")]
		internal int UserSave([Parameter(DbType="Int")] System.Nullable<int> nSUserID, [Parameter(DbType="Bit")] System.Nullable<bool> bRequestsForOtherUsers, [Parameter(DbType="Bit")] System.Nullable<bool> bActive, [Parameter(DbType="Int")] System.Nullable<long> nLangID, [Parameter(DbType="Int")] System.Nullable<int> nEmplID_User)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nSUserID, bRequestsForOtherUsers, bActive, nLangID, nEmplID_User);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_SUser_Select")]
		internal ISingleResult<User> UserSelect([Parameter(DbType="Int")] System.Nullable<int> nSUserID, [Parameter(DbType="VarChar(50)")] string sFirstName, [Parameter(DbType="VarChar(50)")] string sLastName, [Parameter(DbType="VarChar(50)")] string sEMail, [Parameter(DbType="Bit")] System.Nullable<bool> bRequestsForOtherUsers, [Parameter(DbType="VarChar(30)")] string sPhone, [Parameter(DbType="Int")] System.Nullable<int> nEmplID, [Parameter(DbType="Bit")] System.Nullable<bool> bActive, [Parameter(DbType="Int")] System.Nullable<long> nLangID, [Parameter(DbType="Int")] System.Nullable<int> nEmplID_User)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nSUserID, sFirstName, sLastName, sEMail, bRequestsForOtherUsers, sPhone, nEmplID, bActive, nLangID, nEmplID_User);
			return ((ISingleResult<User>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_SUser_Select")]
		internal ISingleResult<NamedEntity> UserSelectAsNamedEntity([Parameter(DbType="Int")] System.Nullable<int> nSUserID, [Parameter(DbType="VarChar(50)")] string sFirstName, [Parameter(DbType="VarChar(50)")] string sLastName, [Parameter(DbType="VarChar(50)")] string sEMail, [Parameter(DbType="Bit")] System.Nullable<bool> bRequestsForOtherUsers, [Parameter(DbType="VarChar(30)")] string sPhone, [Parameter(DbType="Int")] System.Nullable<int> nEmplID, [Parameter(DbType="Bit")] System.Nullable<bool> bActive, [Parameter(DbType="Int")] System.Nullable<long> nLangID, [Parameter(DbType="Int")] System.Nullable<int> nEmplID_User)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nSUserID, sFirstName, sLastName, sEMail, bRequestsForOtherUsers, sPhone, nEmplID, bActive, nLangID, nEmplID_User);
			return ((ISingleResult<NamedEntity>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_SUser_Delete")]
		internal int UserDelete([Parameter(DbType="Int")] System.Nullable<int> nSUserID, [Parameter(DbType="Int")] System.Nullable<long> nLangID, [Parameter(DbType="Int")] System.Nullable<int> nEmplID_User)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nSUserID, nLangID, nEmplID_User);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_SUser_AndSecurity_Select")]
		internal ISingleResult<NamedEntity> UserAndSecuritySelectAsNamedEntity([Parameter(DbType="Int")] System.Nullable<int> nEmplID, [Parameter(DbType="Int")] System.Nullable<long> nLangID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nEmplID, nLangID);
			return ((ISingleResult<NamedEntity>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_SolicitudeToPrint2")]
		internal ISingleResult<SolicitudeToPrintResult> SolicitudeToPrint([Parameter(DbType="smalldatetime")] System.Nullable<System.DateTime> dtBegin, [Parameter(DbType="smalldatetime")] System.Nullable<System.DateTime> dtEnd, [Parameter(DbType="Int")] System.Nullable<int> nSolicitudeBegin, [Parameter(DbType="Int")] System.Nullable<int> nSolicitudeEnd, [Parameter(DbType="VarChar(50)")] string sSolicitor, [Parameter(DbType="VarChar(50)")] string sNroDoc, [Parameter(DbType="Int")] System.Nullable<int> nSolicitudeStatusID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dtBegin, dtEnd, nSolicitudeBegin, nSolicitudeEnd, sSolicitor, sNroDoc, nSolicitudeStatusID);
			return ((ISingleResult<SolicitudeToPrintResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_SolicitudeToPrintQuery")]
		internal ISingleResult<SolicitudeToPrintResult> SolicitudeToPrintQuery([Parameter(DbType="XML")] string xmlSolicitude)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlSolicitude);
			return ((ISingleResult<SolicitudeToPrintResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_Solicitude_Disassemble")]
		internal int SolicitudeDisassemble([Parameter(DbType="varchar(100)")] string nUserID, [Parameter(DbType="XML")] string xmlSolicitudes, [Parameter(DbType="Int")] System.Nullable<long> nLangID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nUserID, xmlSolicitudes, nLangID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Solicitude_GetExpired")]
		internal ISingleResult<Solicitude> SolicitudeGetExpired([Parameter(DbType="Int")] System.Nullable<int> nUsuarioID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nUsuarioID);
			return ((ISingleResult<Solicitude>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_Solicitude_Nullify")]
		internal int SolicitudeNullify([Parameter(DbType="varchar(100)")] string nUserID, [Parameter(DbType="XML")] string xmlSolicitudes, [Parameter(DbType="Int")] System.Nullable<int> nNullificationReasonID, [Parameter(DbType="varchar(200)")] string sNullificationObs, [Parameter(DbType="Int")] System.Nullable<long> nLangID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nUserID, xmlSolicitudes, nNullificationReasonID, sNullificationObs, nLangID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_SolicitudeStatus_Select")]
		internal ISingleResult<SolicitudeStatus> SolicitudeStatusSelect([Parameter(DbType="Int")] System.Nullable<int> nSolicitudeStatusID, [Parameter(DbType="Varchar(100)")] string sName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nSolicitudeStatusID, sName);
			return ((ISingleResult<SolicitudeStatus>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_SolicitudeStatus_Select")]
		internal ISingleResult<NamedEntity> SolicitudeStatusSelectAsNamedEntity([Parameter(DbType="Int")] System.Nullable<int> nSolicitudeStatusID, [Parameter(DbType="Varchar(100)")] string sName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nSolicitudeStatusID, sName);
			return ((ISingleResult<NamedEntity>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_Solicitude_LastItems")]
		internal ISingleResult<SolicitudeItem> SolicitudeLastItems([Parameter(DbType="Int")] System.Nullable<int> nSolicitorID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nSolicitorID);
			return ((ISingleResult<SolicitudeItem>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_ProductSolicitorKind_Select")]
		internal ISingleResult<ProductSolicitorKind> ProductSolicitorKindSelect([Parameter(DbType="Int")] System.Nullable<int> nSolicitorKindID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nSolicitorKindID);
			return ((ISingleResult<ProductSolicitorKind>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Perfil_Generico_Select")]
		internal ISingleResult<Perfil_GenericoResult> ModSegGetGenericProfileID([Parameter(Name="C_Modulo", DbType="VarChar(20)")] string c_Modulo, [Parameter(Name="C_Usuario", DbType="VarChar(20)")] string c_Usuario, [Parameter(DbType="TinyInt")] System.Nullable<byte> bLoguea)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), c_Modulo, c_Usuario, bLoguea);
			return ((ISingleResult<Perfil_GenericoResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_ProductGetActiveOfUser_Select")]
		internal ISingleResult<NamedEntity> ProductGetActiveOfUserSelectAsNamedEntity([Parameter(DbType="Int")] System.Nullable<int> nEmplID, [Parameter(DbType="varchar(200)")] string sName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nEmplID, sName);
			return ((ISingleResult<NamedEntity>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_ProductStock")]
		internal ISingleResult<ProductStock_Result> ProductStock()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<ProductStock_Result>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Users_Select")]
		internal ISingleResult<UsersResult> Users()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<UsersResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_EstimateForSolitude_Select")]
		internal ISingleResult<EstimateForSolitudeResult> EstimateForSolitudeSelect([Parameter(DbType="int")] System.Nullable<int> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nUserID);
			return ((ISingleResult<EstimateForSolitudeResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_ReportSalesAdministration")]
		internal ISingleResult<ReportSalesAdministrationResult> ReportSalesAdministration([Parameter(DbType="smalldatetime")] System.Nullable<System.DateTime> dtBegin, [Parameter(DbType="smalldatetime")] System.Nullable<System.DateTime> dtEnd, [Parameter(DbType="int")] System.Nullable<int> nIdUsuarioFilter, [Parameter(DbType="int")] System.Nullable<int> nIdUsuario)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dtBegin, dtEnd, nIdUsuarioFilter, nIdUsuario);
			return ((ISingleResult<ReportSalesAdministrationResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_SolicitudeProductDetail")]
		internal ISingleResult<SolicitudeProductDetailResult> SolicitudeProductDetail([Parameter(DbType="Int")] System.Nullable<int> nSUserID, [Parameter(DbType="Int")] System.Nullable<int> nProductID, [Parameter(DbType="smalldatetime")] System.Nullable<System.DateTime> dtBegin, [Parameter(DbType="smalldatetime")] System.Nullable<System.DateTime> dtEnd, [Parameter(DbType="int")] System.Nullable<int> nIdUsuario)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nSUserID, nProductID, dtBegin, dtEnd, nIdUsuario);
			return ((ISingleResult<SolicitudeProductDetailResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Requests")]
		internal ISingleResult<RequestsResult> Requests([Parameter(DbType="Int")] System.Nullable<int> nSUserID, [Parameter(DbType="smalldatetime")] System.Nullable<System.DateTime> dtBegin, [Parameter(DbType="smalldatetime")] System.Nullable<System.DateTime> dtEnd, [Parameter(DbType="int")] System.Nullable<int> nIdUsuario)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nSUserID, dtBegin, dtEnd, nIdUsuario);
			return ((ISingleResult<RequestsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Requests_MoneyAccumulated")]
		internal ISingleResult<Requests_MoneyAccumulatedResult> Requests_MoneyAccumulated([Parameter(DbType="smalldatetime")] System.Nullable<System.DateTime> dtBegin, [Parameter(DbType="smalldatetime")] System.Nullable<System.DateTime> dtEnd, [Parameter(DbType="int")] System.Nullable<int> nIdUsuario)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dtBegin, dtEnd, nIdUsuario);
			return ((ISingleResult<Requests_MoneyAccumulatedResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Solicitude_GetNullable")]
		internal ISingleResult<Solicitude> SolicitudeGetNullable([Parameter(DbType="Int")] System.Nullable<int> nStatusID, [Parameter(DbType="smalldatetime")] System.Nullable<System.DateTime> dtBegin, [Parameter(DbType="smalldatetime")] System.Nullable<System.DateTime> dtEnd, [Parameter(DbType="Int")] System.Nullable<int> nSolicitorUserID, [Parameter(DbType="int")] System.Nullable<int> nIdUsuario)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nStatusID, dtBegin, dtEnd, nSolicitorUserID, nIdUsuario);
			return ((ISingleResult<Solicitude>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Kinship_Select")]
		internal ISingleResult<Kinship> KinshipSelect([Parameter(DbType="Int")] System.Nullable<int> nKinshipID, [Parameter(DbType="Varchar(100)")] string sName, [Parameter(DbType="Int")] System.Nullable<int> nKinshipKindID, [Parameter(DbType="Int")] System.Nullable<int> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nKinshipID, sName, nKinshipKindID, nUserID);
			return ((ISingleResult<Kinship>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Kinship_Select")]
		internal ISingleResult<NamedEntity> KinshipSelectAsNamedEntity([Parameter(DbType="Int")] System.Nullable<int> nKinshipID, [Parameter(DbType="Varchar(100)")] string sName, [Parameter(DbType="Int")] System.Nullable<int> nKinshipKindID, [Parameter(DbType="Int")] System.Nullable<int> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nKinshipID, sName, nKinshipKindID, nUserID);
			return ((ISingleResult<NamedEntity>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Kinship_Save")]
		internal int KinshipSave([Parameter(DbType="Int")] System.Nullable<int> nKinshipID, [Parameter(DbType="Varchar(100)")] string sName, [Parameter(DbType="Int")] System.Nullable<int> nKinshipKindID, [Parameter(DbType="Int")] System.Nullable<long> LangID, [Parameter(DbType="Int")] System.Nullable<int> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nKinshipID, sName, nKinshipKindID, LangID, nUserID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Kinship_Delete")]
		internal int KinshipDelete([Parameter(DbType="Int")] System.Nullable<int> nKinshipID, [Parameter(DbType="Int")] System.Nullable<long> LangID, [Parameter(DbType="Int")] System.Nullable<int> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nKinshipID, LangID, nUserID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_KinshipKind_Select")]
		internal ISingleResult<NamedEntity> KinshipKindSelectAsNamedEntity([Parameter(DbType="Int")] System.Nullable<int> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nUserID);
			return ((ISingleResult<NamedEntity>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Relative_Select")]
		internal ISingleResult<Relative> RelativeSelect([Parameter(DbType="Int")] System.Nullable<int> nRelativeID, [Parameter(DbType="Varchar(80)")] string sName, [Parameter(DbType="Varchar(20)")] string sRUT, [Parameter(DbType="datetime")] System.Nullable<System.DateTime> dtBornDate, [Parameter(DbType="Int")] System.Nullable<int> nKinshipID, [Parameter(DbType="Varchar(1)")] string sStatus, [Parameter(DbType="Int")] System.Nullable<long> nUserIDFilter, [Parameter(DbType="Int")] System.Nullable<long> nLangID, [Parameter(DbType="Int")] System.Nullable<long> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nRelativeID, sName, sRUT, dtBornDate, nKinshipID, sStatus, nUserIDFilter, nLangID, nUserID);
			return ((ISingleResult<Relative>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Relative_Select")]
		internal ISingleResult<NamedEntity> RelativeSelectAsNamedEntity([Parameter(DbType="Int")] System.Nullable<int> nRelativeID, [Parameter(DbType="Varchar(80)")] string sName, [Parameter(DbType="Varchar(20)")] string sRUT, [Parameter(DbType="datetime")] System.Nullable<System.DateTime> dtBornDate, [Parameter(DbType="Int")] System.Nullable<int> nKinshipID, [Parameter(DbType="Varchar(1)")] string sStatus, [Parameter(DbType="Int")] System.Nullable<long> nUserIDFilter, [Parameter(DbType="Int")] System.Nullable<long> nLangID, [Parameter(DbType="Int")] System.Nullable<long> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nRelativeID, sName, sRUT, dtBornDate, nKinshipID, sStatus, nUserIDFilter, nLangID, nUserID);
			return ((ISingleResult<NamedEntity>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_RelativeGetActiveOfUser_Select")]
		internal ISingleResult<NamedEntity> RelativeGetActiveOfUserSelectAsNamedEntity([Parameter(DbType="Int")] System.Nullable<int> nRelativeID, [Parameter(DbType="Varchar(80)")] string sName, [Parameter(DbType="Varchar(20)")] string sRUT, [Parameter(DbType="datetime")] System.Nullable<System.DateTime> dtBornDate, [Parameter(DbType="Int")] System.Nullable<int> nKinshipID, [Parameter(DbType="Varchar(1)")] string sStatus, [Parameter(DbType="Int")] System.Nullable<int> nUserIDFilter, [Parameter(DbType="Int")] System.Nullable<long> nLangID, [Parameter(DbType="Int")] System.Nullable<int> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nRelativeID, sName, sRUT, dtBornDate, nKinshipID, sStatus, nUserIDFilter, nLangID, nUserID);
			return ((ISingleResult<NamedEntity>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Relative_Save")]
		internal int RelativeSave([Parameter(DbType="Int")] System.Nullable<int> nRelativeID, [Parameter(DbType="Varchar(80)")] string sName, [Parameter(DbType="Varchar(20)")] string sRUT, [Parameter(DbType="datetime")] System.Nullable<System.DateTime> dtBornDate, [Parameter(DbType="Int")] System.Nullable<int> nKinshipID, [Parameter(DbType="Int")] System.Nullable<int> nSolicitorID, [Parameter(DbType="Int")] System.Nullable<long> LangID, [Parameter(DbType="Int")] System.Nullable<int> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nRelativeID, sName, sRUT, dtBornDate, nKinshipID, nSolicitorID, LangID, nUserID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Relative_Delete")]
		internal int RelativeDelete([Parameter(DbType="Int")] System.Nullable<int> nRelativeID, [Parameter(DbType="Int")] System.Nullable<long> LangID, [Parameter(DbType="Int")] System.Nullable<int> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nRelativeID, LangID, nUserID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Relative_SetAsApproved")]
		internal int RelativeSetAsApproved([Parameter(DbType="XML")] string xmlRelatives, [Parameter(DbType="Int")] System.Nullable<long> nLangID, [Parameter(DbType="Int")] System.Nullable<int> nUserID, [Parameter(DbType="Int")] System.Nullable<int> nEmployeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlRelatives, nLangID, nUserID, nEmployeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_ListedRelative_Select")]
		internal ISingleResult<ListedRelative> RelativeList([Parameter(DbType="Int")] System.Nullable<int> nRelativeID, [Parameter(DbType="Varchar(80)")] string sName, [Parameter(DbType="Varchar(20)")] string sRUT, [Parameter(DbType="datetime")] System.Nullable<System.DateTime> dtBornDate, [Parameter(DbType="Int")] System.Nullable<int> nKinshipID, [Parameter(DbType="Int")] System.Nullable<int> nSolicitorID, [Parameter(DbType="Varchar(1)")] string sStatus, [Parameter(DbType="Int")] System.Nullable<long> nLangID, [Parameter(DbType="Int")] System.Nullable<int> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nRelativeID, sName, sRUT, dtBornDate, nKinshipID, nSolicitorID, sStatus, nLangID, nUserID);
			return ((ISingleResult<ListedRelative>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Treatment_Select")]
		internal ISingleResult<Treatment> TreatmentSelect([Parameter(DbType="Int")] System.Nullable<int> nID, [Parameter(DbType="Varchar(100)")] string sName, [Parameter(DbType="Int")] System.Nullable<int> nLangID, [Parameter(DbType="Int")] System.Nullable<int> nUserID, [Parameter(DbType="Int")] System.Nullable<int> nEmplID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nID, sName, nLangID, nUserID, nEmplID);
			return ((ISingleResult<Treatment>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Treatment_Select")]
		internal ISingleResult<NamedEntity> TreatmentSelectAsNamedEntity([Parameter(DbType="Int")] System.Nullable<int> nID, [Parameter(DbType="Varchar(100)")] string sName, [Parameter(DbType="Int")] System.Nullable<int> nLangID, [Parameter(DbType="Int")] System.Nullable<int> nUserID, [Parameter(DbType="Int")] System.Nullable<int> nEmplID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nID, sName, nLangID, nUserID, nEmplID);
			return ((ISingleResult<NamedEntity>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Solicitude_Select")]
		internal ISingleResult<Solicitude> SolicitudeSelect([Parameter(DbType="Int")] System.Nullable<int> nSolicitudeID, [Parameter(DbType="Varchar(200)")] string sDescription, [Parameter(DbType="Int")] System.Nullable<int> nStatusID, [Parameter(DbType="Int")] System.Nullable<int> nTreatmentID, [Parameter(DbType="datetime")] System.Nullable<System.DateTime> dtBeginDate, [Parameter(DbType="datetime")] System.Nullable<System.DateTime> dtEndDate, [Parameter(DbType="datetime")] System.Nullable<System.DateTime> dtReceptionDate, [Parameter(DbType="Int")] System.Nullable<int> nSolicitorUserID, [Parameter(DbType="Int")] System.Nullable<int> nUsuarioID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nSolicitudeID, sDescription, nStatusID, nTreatmentID, dtBeginDate, dtEndDate, dtReceptionDate, nSolicitorUserID, nUsuarioID);
			return ((ISingleResult<Solicitude>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Modify_Solicitude_Select")]
		internal ISingleResult<Solicitude> ModifySolicitudeSelect([Parameter(DbType="Int")] System.Nullable<int> nSolicitudeID, [Parameter(DbType="Varchar(200)")] string sDescription, [Parameter(DbType="Int")] System.Nullable<int> nStatusID, [Parameter(DbType="Int")] System.Nullable<int> nTreatmentID, [Parameter(DbType="datetime")] System.Nullable<System.DateTime> dtBeginDate, [Parameter(DbType="datetime")] System.Nullable<System.DateTime> dtEndDate, [Parameter(DbType="datetime")] System.Nullable<System.DateTime> dtReceptionDate, [Parameter(DbType="Int")] System.Nullable<int> nSolicitorUserID, [Parameter(DbType="Int")] System.Nullable<int> nUsuarioID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nSolicitudeID, sDescription, nStatusID, nTreatmentID, dtBeginDate, dtEndDate, dtReceptionDate, nSolicitorUserID, nUsuarioID);
			return ((ISingleResult<Solicitude>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Solicitude_Select")]
		internal ISingleResult<NamedEntity> SolicitudeSelectAsNamedEntity([Parameter(DbType="Int")] System.Nullable<int> nSolicitudeID, [Parameter(DbType="Varchar(200)")] string sDescription, [Parameter(DbType="Int")] System.Nullable<int> nStatusID, [Parameter(DbType="Int")] System.Nullable<int> nTreatmentID, [Parameter(DbType="datetime")] System.Nullable<System.DateTime> dtBeginDate, [Parameter(DbType="datetime")] System.Nullable<System.DateTime> dtEndDate, [Parameter(DbType="datetime")] System.Nullable<System.DateTime> dtReceptionDate, [Parameter(DbType="Int")] System.Nullable<int> nSolicitorUserID, [Parameter(DbType="Int")] System.Nullable<int> nUsuarioID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nSolicitudeID, sDescription, nStatusID, nTreatmentID, dtBeginDate, dtEndDate, dtReceptionDate, nSolicitorUserID, nUsuarioID);
			return ((ISingleResult<NamedEntity>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Solicitude_Save")]
		internal int SolicitudeSave([Parameter(DbType="Int")] System.Nullable<int> nSolicitorID, [Parameter(DbType="Int")] System.Nullable<int> nRelativeID, [Parameter(DbType="Int")] System.Nullable<int> nTreatmentID, [Parameter(DbType="datetime")] System.Nullable<System.DateTime> dtBeginDate, [Parameter(DbType="datetime")] System.Nullable<System.DateTime> dtEndDate, [Parameter(DbType="VarChar(2000)")] string sObservations, [Parameter(DbType="Int")] System.Nullable<int> nLocationID, [Parameter(DbType="XML")] string xmlSolicitudeItems, [Parameter(DbType="Int")] System.Nullable<int> nLangID, [Parameter(DbType="bigint")] System.Nullable<long> nEmplID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nSolicitorID, nRelativeID, nTreatmentID, dtBeginDate, dtEndDate, sObservations, nLocationID, xmlSolicitudeItems, nLangID, nEmplID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_SolicitudeModify_Save")]
		internal int SolicitudeModifySave([Parameter(DbType="Int")] System.Nullable<int> SolicitudeID, [Parameter(DbType="Int")] System.Nullable<int> flag, [Parameter(DbType="Int")] System.Nullable<int> nSolicitorID, [Parameter(DbType="Int")] System.Nullable<int> nRelativeID, [Parameter(DbType="Int")] System.Nullable<int> nTreatmentID, [Parameter(DbType="datetime")] System.Nullable<System.DateTime> dtBeginDate, [Parameter(DbType="datetime")] System.Nullable<System.DateTime> dtEndDate, [Parameter(DbType="VarChar(2000)")] string sObservations, [Parameter(DbType="Int")] System.Nullable<int> nLocationID, [Parameter(DbType="XML")] string xmlSolicitudeItems, [Parameter(DbType="Int")] System.Nullable<int> nLangID, [Parameter(DbType="bigint")] System.Nullable<long> nEmplID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), SolicitudeID, flag, nSolicitorID, nRelativeID, nTreatmentID, dtBeginDate, dtEndDate, sObservations, nLocationID, xmlSolicitudeItems, nLangID, nEmplID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_SolicitudeProductsOfUser_Select")]
		internal ISingleResult<SolicitudeProductsOfUserResult> SolicitudeProductsOfUser([Parameter(DbType="Int")] System.Nullable<int> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nUserID);
			return ((ISingleResult<SolicitudeProductsOfUserResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_SolicitudeProductsOfUserToModify_Select")]
		internal ISingleResult<SolicitudeProductsOfUserModifyResult> SolicitudeProductsOfUserModify([Parameter(DbType="Int")] System.Nullable<int> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nUserID);
			return ((ISingleResult<SolicitudeProductsOfUserModifyResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Select_Fields")]
		internal ISingleResult<SolicitudeFieldsToModifyResult> SolicitudeFieldsToModify([Parameter(DbType="Int")] System.Nullable<int> SolicitorID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), SolicitorID);
			return ((ISingleResult<SolicitudeFieldsToModifyResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_SolicitudeItems_Select")]
		internal ISingleResult<SolicitudeItem> SolicitudeItemsSelect([Parameter(DbType="Int")] System.Nullable<int> nSolicitudeID, [Parameter(DbType="Int")] System.Nullable<long> nLangID, [Parameter(DbType="Int")] System.Nullable<int> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nSolicitudeID, nLangID, nUserID);
			return ((ISingleResult<SolicitudeItem>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Solicitude_SetAsApproved")]
		internal int SolicitudeSetAsApproved([Parameter(DbType="XML")] string xmlSolicitudes, [Parameter(DbType="Int")] System.Nullable<long> nLangID, [Parameter(DbType="int")] System.Nullable<long> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlSolicitudes, nLangID, nUserID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Solicitude_Reject")]
		internal int SolicitudeReject([Parameter(DbType="XML")] string xmlSolicitudes, [Parameter(DbType="Int")] System.Nullable<int> nRejectionReasonID, [Parameter(DbType="varchar(200)")] string sRejectionObs, [Parameter(DbType="Int")] System.Nullable<long> nLangID, [Parameter(DbType="int")] System.Nullable<long> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlSolicitudes, nRejectionReasonID, sRejectionObs, nLangID, nUserID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_RejectionReason_Select")]
		internal ISingleResult<RejectionReason> RejectionReasonSelect([Parameter(DbType="Int")] System.Nullable<int> nRejectionReasonID, [Parameter(DbType="Varchar(100)")] string sName, [Parameter(DbType="Int")] System.Nullable<long> nLangID, [Parameter(DbType="int")] System.Nullable<long> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nRejectionReasonID, sName, nLangID, nUserID);
			return ((ISingleResult<RejectionReason>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_RejectionReason_Select")]
		internal ISingleResult<NamedEntity> RejectionReasonSelectAsNamedEntity([Parameter(DbType="Int")] System.Nullable<int> nRejectionReasonID, [Parameter(DbType="Varchar(100)")] string sName, [Parameter(DbType="Int")] System.Nullable<long> nLangID, [Parameter(DbType="int")] System.Nullable<long> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nRejectionReasonID, sName, nLangID, nUserID);
			return ((ISingleResult<NamedEntity>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_RejectionReason_Save")]
		internal int RejectionReasonSave([Parameter(DbType="Int")] System.Nullable<int> nRejectionReasonID, [Parameter(DbType="Varchar(100)")] string sName, [Parameter(DbType="Int")] System.Nullable<long> nLangID, [Parameter(DbType="int")] System.Nullable<long> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nRejectionReasonID, sName, nLangID, nUserID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_RejectionReason_Delete")]
		internal int RejectionReasonDelete([Parameter(DbType="Int")] System.Nullable<int> nRejectionReasonID, [Parameter(DbType="Int")] System.Nullable<long> nLangID, [Parameter(DbType="int")] System.Nullable<long> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nRejectionReasonID, nLangID, nUserID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Solicitude_GetRejectable")]
		internal ISingleResult<SolicitudeItem> SolicitudeGetRejectable([Parameter(DbType="smalldatetime")] System.Nullable<System.DateTime> dtBegin, [Parameter(DbType="smalldatetime")] System.Nullable<System.DateTime> dtEnd, [Parameter(DbType="Int")] System.Nullable<int> nSolicitorUserID, [Parameter(DbType="Int")] System.Nullable<long> nLangID, [Parameter(DbType="int")] System.Nullable<long> nUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dtBegin, dtEnd, nSolicitorUserID, nLangID, nUserID);
			return ((ISingleResult<SolicitudeItem>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Solicitude_SetAsProcessed")]
		internal int SolicitudeSetAsProcessed([Parameter(DbType="XML")] string xmlSolicitudes, [Parameter(DbType="Int")] System.Nullable<long> nEmplID, [Parameter(DbType="Int")] System.Nullable<long> nUserID, [Parameter(DbType="Int")] System.Nullable<long> nLangID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlSolicitudes, nEmplID, nUserID, nLangID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pSEMP_Solicitude_SetAsDelivered")]
		internal int SolicitudeSetAsDelivered([Parameter(DbType="varchar(100)")] string nUserID, [Parameter(DbType="XML")] string xmlSolicitudes, [Parameter(DbType="Int")] System.Nullable<long> nLangID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nUserID, xmlSolicitudes, nLangID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_Location_Select2")]
		internal ISingleResult<Location> LocationSelect([Parameter(DbType="Int")] System.Nullable<int> nLocationID, [Parameter(DbType="Varchar(100)")] string sName, [Parameter(DbType="Bit")] System.Nullable<bool> bActive)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nLocationID, sName, bActive);
			return ((ISingleResult<Location>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_Location_Select2")]
		internal ISingleResult<NamedEntity> LocationSelectAsNamedEntity([Parameter(DbType="Int")] System.Nullable<int> nLocationID, [Parameter(DbType="Varchar(100)")] string sName, [Parameter(DbType="Bit")] System.Nullable<bool> bActive)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nLocationID, sName, bActive);
			return ((ISingleResult<NamedEntity>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_Location_Save2")]
		internal int LocationSave([Parameter(DbType="Int")] System.Nullable<int> nLocationID, [Parameter(DbType="Varchar(100)")] string sName, [Parameter(DbType="Bit")] System.Nullable<bool> bActive, [Parameter(DbType="Int")] System.Nullable<long> LangID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nLocationID, sName, bActive, LangID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.pPPP2_Location_Delete2")]
		internal int LocationDelete([Parameter(DbType="Int")] System.Nullable<int> nLocationID, [Parameter(DbType="Int")] System.Nullable<long> LangID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nLocationID, LangID);
			return ((int)(result.ReturnValue));
		}
	}
	
	[Table(Name="")]
	[InheritanceMapping(Code="0", Type=typeof(NamedEntity), IsDefault=true)]
	public partial class NamedEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public NamedEntity()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public virtual System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never, IsDiscriminator=true)]
		public virtual string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Language : NamedEntity
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Language()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public override System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public override string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
	}
	
	public partial class RejectionReason : NamedEntity
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public RejectionReason()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public override System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public override string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
	}
	
	public partial class SolicitorKind : NamedEntity
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		private System.Nullable<bool> _RequestsWithoutStock;
		
		private System.Nullable<int> _MaxProductAmmountPerRequest;
		
		private System.Nullable<int> _MaxProductAmmountPerMonth;
		
		private System.Nullable<int> _MaxValidTime;
		
		private System.Nullable<int> _MaxRequestsPerMonth;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRequestsWithoutStockChanging(System.Nullable<bool> value);
    partial void OnRequestsWithoutStockChanged();
    partial void OnMaxProductAmmountPerRequestChanging(System.Nullable<int> value);
    partial void OnMaxProductAmmountPerRequestChanged();
    partial void OnMaxProductAmmountPerMonthChanging(System.Nullable<int> value);
    partial void OnMaxProductAmmountPerMonthChanged();
    partial void OnMaxValidTimeChanging(System.Nullable<int> value);
    partial void OnMaxValidTimeChanged();
    partial void OnMaxRequestsPerMonthChanging(System.Nullable<int> value);
    partial void OnMaxRequestsPerMonthChanged();
    #endregion
		
		public SolicitorKind()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public override System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public override string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_RequestsWithoutStock", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> RequestsWithoutStock
		{
			get
			{
				return this._RequestsWithoutStock;
			}
			set
			{
				if ((this._RequestsWithoutStock != value))
				{
					this.OnRequestsWithoutStockChanging(value);
					this.SendPropertyChanging();
					this._RequestsWithoutStock = value;
					this.SendPropertyChanged("RequestsWithoutStock");
					this.OnRequestsWithoutStockChanged();
				}
			}
		}
		
		[Column(Storage="_MaxProductAmmountPerRequest", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> MaxProductAmmountPerRequest
		{
			get
			{
				return this._MaxProductAmmountPerRequest;
			}
			set
			{
				if ((this._MaxProductAmmountPerRequest != value))
				{
					this.OnMaxProductAmmountPerRequestChanging(value);
					this.SendPropertyChanging();
					this._MaxProductAmmountPerRequest = value;
					this.SendPropertyChanged("MaxProductAmmountPerRequest");
					this.OnMaxProductAmmountPerRequestChanged();
				}
			}
		}
		
		[Column(Storage="_MaxProductAmmountPerMonth", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> MaxProductAmmountPerMonth
		{
			get
			{
				return this._MaxProductAmmountPerMonth;
			}
			set
			{
				if ((this._MaxProductAmmountPerMonth != value))
				{
					this.OnMaxProductAmmountPerMonthChanging(value);
					this.SendPropertyChanging();
					this._MaxProductAmmountPerMonth = value;
					this.SendPropertyChanged("MaxProductAmmountPerMonth");
					this.OnMaxProductAmmountPerMonthChanged();
				}
			}
		}
		
		[Column(Storage="_MaxValidTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> MaxValidTime
		{
			get
			{
				return this._MaxValidTime;
			}
			set
			{
				if ((this._MaxValidTime != value))
				{
					this.OnMaxValidTimeChanging(value);
					this.SendPropertyChanging();
					this._MaxValidTime = value;
					this.SendPropertyChanged("MaxValidTime");
					this.OnMaxValidTimeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxRequestsPerMonth", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> MaxRequestsPerMonth
		{
			get
			{
				return this._MaxRequestsPerMonth;
			}
			set
			{
				if ((this._MaxRequestsPerMonth != value))
				{
					this.OnMaxRequestsPerMonthChanging(value);
					this.SendPropertyChanging();
					this._MaxRequestsPerMonth = value;
					this.SendPropertyChanged("MaxRequestsPerMonth");
					this.OnMaxRequestsPerMonthChanged();
				}
			}
		}
	}
	
	public partial class User : NamedEntity
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _EMail;
		
		private System.Nullable<bool> _RequestsForOtherUsers;
		
		private string _Phone;
		
		private System.Nullable<int> _EmplID;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnRequestsForOtherUsersChanging(System.Nullable<bool> value);
    partial void OnRequestsForOtherUsersChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmplIDChanging(System.Nullable<int> value);
    partial void OnEmplIDChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public override System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public override string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_FirstName", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[Column(Storage="_EMail", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[Column(Storage="_RequestsForOtherUsers", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> RequestsForOtherUsers
		{
			get
			{
				return this._RequestsForOtherUsers;
			}
			set
			{
				if ((this._RequestsForOtherUsers != value))
				{
					this.OnRequestsForOtherUsersChanging(value);
					this.SendPropertyChanging();
					this._RequestsForOtherUsers = value;
					this.SendPropertyChanged("RequestsForOtherUsers");
					this.OnRequestsForOtherUsersChanged();
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_EmplID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> EmplID
		{
			get
			{
				return this._EmplID;
			}
			set
			{
				if ((this._EmplID != value))
				{
					this.OnEmplIDChanging(value);
					this.SendPropertyChanging();
					this._EmplID = value;
					this.SendPropertyChanged("EmplID");
					this.OnEmplIDChanged();
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
	}
	
	public partial class SolicitudeItemSpecial : NamedEntity
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		private System.Nullable<int> _Ammount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAmmountChanging(System.Nullable<int> value);
    partial void OnAmmountChanged();
    #endregion
		
		public SolicitudeItemSpecial()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public override System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public override string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Ammount", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Ammount
		{
			get
			{
				return this._Ammount;
			}
			set
			{
				if ((this._Ammount != value))
				{
					this.OnAmmountChanging(value);
					this.SendPropertyChanging();
					this._Ammount = value;
					this.SendPropertyChanged("Ammount");
					this.OnAmmountChanged();
				}
			}
		}
	}
	
	public partial class Product : NamedEntity
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		private string _ProductOrigin;
		
		private System.Nullable<bool> _ColdChain;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _MonthlyAmount;
		
		private System.Nullable<int> _AnnualAmount;
		
		private System.Nullable<int> _ReplenishPoint;
		
		private System.Nullable<int> _MaxAge;
		
		private System.Nullable<int> _UnitPackage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnProductOriginChanging(string value);
    partial void OnProductOriginChanged();
    partial void OnColdChainChanging(System.Nullable<bool> value);
    partial void OnColdChainChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnMonthlyAmountChanging(System.Nullable<int> value);
    partial void OnMonthlyAmountChanged();
    partial void OnAnnualAmountChanging(System.Nullable<int> value);
    partial void OnAnnualAmountChanged();
    partial void OnReplenishPointChanging(System.Nullable<int> value);
    partial void OnReplenishPointChanged();
    partial void OnMaxAgeChanging(System.Nullable<int> value);
    partial void OnMaxAgeChanged();
    partial void OnUnitPackageChanging(System.Nullable<int> value);
    partial void OnUnitPackageChanged();
    #endregion
		
		public Product()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public override System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public override string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_ProductOrigin", DbType="VarChar(20) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public string ProductOrigin
		{
			get
			{
				return this._ProductOrigin;
			}
			set
			{
				if ((this._ProductOrigin != value))
				{
					this.OnProductOriginChanging(value);
					this.SendPropertyChanging();
					this._ProductOrigin = value;
					this.SendPropertyChanged("ProductOrigin");
					this.OnProductOriginChanged();
				}
			}
		}
		
		[Column(Storage="_ColdChain", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> ColdChain
		{
			get
			{
				return this._ColdChain;
			}
			set
			{
				if ((this._ColdChain != value))
				{
					this.OnColdChainChanging(value);
					this.SendPropertyChanging();
					this._ColdChain = value;
					this.SendPropertyChanged("ColdChain");
					this.OnColdChainChanged();
				}
			}
		}
		
		[Column(Storage="_Active", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[Column(Storage="_MonthlyAmount", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> MonthlyAmount
		{
			get
			{
				return this._MonthlyAmount;
			}
			set
			{
				if ((this._MonthlyAmount != value))
				{
					this.OnMonthlyAmountChanging(value);
					this.SendPropertyChanging();
					this._MonthlyAmount = value;
					this.SendPropertyChanged("MonthlyAmount");
					this.OnMonthlyAmountChanged();
				}
			}
		}
		
		[Column(Storage="_AnnualAmount", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AnnualAmount
		{
			get
			{
				return this._AnnualAmount;
			}
			set
			{
				if ((this._AnnualAmount != value))
				{
					this.OnAnnualAmountChanging(value);
					this.SendPropertyChanging();
					this._AnnualAmount = value;
					this.SendPropertyChanged("AnnualAmount");
					this.OnAnnualAmountChanged();
				}
			}
		}
		
		[Column(Storage="_ReplenishPoint", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ReplenishPoint
		{
			get
			{
				return this._ReplenishPoint;
			}
			set
			{
				if ((this._ReplenishPoint != value))
				{
					this.OnReplenishPointChanging(value);
					this.SendPropertyChanging();
					this._ReplenishPoint = value;
					this.SendPropertyChanged("ReplenishPoint");
					this.OnReplenishPointChanged();
				}
			}
		}
		
		[Column(Storage="_MaxAge", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> MaxAge
		{
			get
			{
				return this._MaxAge;
			}
			set
			{
				if ((this._MaxAge != value))
				{
					this.OnMaxAgeChanging(value);
					this.SendPropertyChanging();
					this._MaxAge = value;
					this.SendPropertyChanged("MaxAge");
					this.OnMaxAgeChanged();
				}
			}
		}
		
		[Column(Storage="_UnitPackage", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> UnitPackage
		{
			get
			{
				return this._UnitPackage;
			}
			set
			{
				if ((this._UnitPackage != value))
				{
					this.OnUnitPackageChanging(value);
					this.SendPropertyChanging();
					this._UnitPackage = value;
					this.SendPropertyChanged("UnitPackage");
					this.OnUnitPackageChanged();
				}
			}
		}
	}
	
	public partial class SolicitudeStatus : NamedEntity
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public SolicitudeStatus()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public override System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public override string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
	}
	
	public partial class Kinship : NamedEntity
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		private System.Nullable<int> _KinshipKindID;
		
		private string _KinshipKindName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnKinshipKindIDChanging(System.Nullable<int> value);
    partial void OnKinshipKindIDChanged();
    partial void OnKinshipKindNameChanging(string value);
    partial void OnKinshipKindNameChanged();
    #endregion
		
		public Kinship()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public override System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public override string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_KinshipKindID", DbType="Int not null", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> KinshipKindID
		{
			get
			{
				return this._KinshipKindID;
			}
			set
			{
				if ((this._KinshipKindID != value))
				{
					this.OnKinshipKindIDChanging(value);
					this.SendPropertyChanging();
					this._KinshipKindID = value;
					this.SendPropertyChanged("KinshipKindID");
					this.OnKinshipKindIDChanged();
				}
			}
		}
		
		[Column(Storage="_KinshipKindName", DbType="VarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public string KinshipKindName
		{
			get
			{
				return this._KinshipKindName;
			}
			set
			{
				if ((this._KinshipKindName != value))
				{
					this.OnKinshipKindNameChanging(value);
					this.SendPropertyChanging();
					this._KinshipKindName = value;
					this.SendPropertyChanged("KinshipKindName");
					this.OnKinshipKindNameChanged();
				}
			}
		}
	}
	
	public partial class Treatment : NamedEntity
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Treatment()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public override System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public override string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
	}
	
	public partial class Solicitude : NamedEntity
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		private int _StatusID;
		
		private int _TreatmentID;
		
		private System.Nullable<System.DateTime> _BeginDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<System.DateTime> _ReceptionDate;
		
		private System.Nullable<System.DateTime> _ApprovalDate;
		
		private System.Nullable<System.DateTime> _PreparationDate;
		
		private System.Nullable<System.DateTime> _dtReceiptInitialDate;
		
		private System.Nullable<System.DateTime> _dtReceiptFinalDate;
		
		private string _sSolicitudeType;
		
		private System.Nullable<int> _SolicitorID;
		
		private System.Nullable<int> _RelativeID;
		
		private string _RelativeName;
		
		private string _KinshipName;
		
		private string _Observations;
		
		private System.Nullable<int> _LocationID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnTreatmentIDChanging(int value);
    partial void OnTreatmentIDChanged();
    partial void OnBeginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBeginDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnReceptionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceptionDateChanged();
    partial void OnApprovalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovalDateChanged();
    partial void OnPreparationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPreparationDateChanged();
    partial void OndtReceiptInitialDateChanging(System.Nullable<System.DateTime> value);
    partial void OndtReceiptInitialDateChanged();
    partial void OndtReceiptFinalDateChanging(System.Nullable<System.DateTime> value);
    partial void OndtReceiptFinalDateChanged();
    partial void OnsSolicitudeTypeChanging(string value);
    partial void OnsSolicitudeTypeChanged();
    partial void OnSolicitorIDChanging(System.Nullable<int> value);
    partial void OnSolicitorIDChanged();
    partial void OnRelativeIDChanging(System.Nullable<int> value);
    partial void OnRelativeIDChanged();
    partial void OnRelativeNameChanging(string value);
    partial void OnRelativeNameChanged();
    partial void OnKinshipNameChanging(string value);
    partial void OnKinshipNameChanged();
    partial void OnObservationsChanging(string value);
    partial void OnObservationsChanged();
    partial void OnLocationIDChanging(System.Nullable<int> value);
    partial void OnLocationIDChanged();
    #endregion
		
		public Solicitude()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public override System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public override string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_StatusID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[Column(Storage="_TreatmentID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public int TreatmentID
		{
			get
			{
				return this._TreatmentID;
			}
			set
			{
				if ((this._TreatmentID != value))
				{
					this.OnTreatmentIDChanging(value);
					this.SendPropertyChanging();
					this._TreatmentID = value;
					this.SendPropertyChanged("TreatmentID");
					this.OnTreatmentIDChanged();
				}
			}
		}
		
		[Column(Storage="_BeginDate", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> BeginDate
		{
			get
			{
				return this._BeginDate;
			}
			set
			{
				if ((this._BeginDate != value))
				{
					this.OnBeginDateChanging(value);
					this.SendPropertyChanging();
					this._BeginDate = value;
					this.SendPropertyChanged("BeginDate");
					this.OnBeginDateChanged();
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_ReceptionDate", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ReceptionDate
		{
			get
			{
				return this._ReceptionDate;
			}
			set
			{
				if ((this._ReceptionDate != value))
				{
					this.OnReceptionDateChanging(value);
					this.SendPropertyChanging();
					this._ReceptionDate = value;
					this.SendPropertyChanged("ReceptionDate");
					this.OnReceptionDateChanged();
				}
			}
		}
		
		[Column(Storage="_ApprovalDate", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ApprovalDate
		{
			get
			{
				return this._ApprovalDate;
			}
			set
			{
				if ((this._ApprovalDate != value))
				{
					this.OnApprovalDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDate = value;
					this.SendPropertyChanged("ApprovalDate");
					this.OnApprovalDateChanged();
				}
			}
		}
		
		[Column(Storage="_PreparationDate", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> PreparationDate
		{
			get
			{
				return this._PreparationDate;
			}
			set
			{
				if ((this._PreparationDate != value))
				{
					this.OnPreparationDateChanging(value);
					this.SendPropertyChanging();
					this._PreparationDate = value;
					this.SendPropertyChanged("PreparationDate");
					this.OnPreparationDateChanged();
				}
			}
		}
		
		[Column(Storage="_dtReceiptInitialDate", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> dtReceiptInitialDate
		{
			get
			{
				return this._dtReceiptInitialDate;
			}
			set
			{
				if ((this._dtReceiptInitialDate != value))
				{
					this.OndtReceiptInitialDateChanging(value);
					this.SendPropertyChanging();
					this._dtReceiptInitialDate = value;
					this.SendPropertyChanged("dtReceiptInitialDate");
					this.OndtReceiptInitialDateChanged();
				}
			}
		}
		
		[Column(Storage="_dtReceiptFinalDate", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> dtReceiptFinalDate
		{
			get
			{
				return this._dtReceiptFinalDate;
			}
			set
			{
				if ((this._dtReceiptFinalDate != value))
				{
					this.OndtReceiptFinalDateChanging(value);
					this.SendPropertyChanging();
					this._dtReceiptFinalDate = value;
					this.SendPropertyChanged("dtReceiptFinalDate");
					this.OndtReceiptFinalDateChanged();
				}
			}
		}
		
		[Column(Storage="_sSolicitudeType", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string sSolicitudeType
		{
			get
			{
				return this._sSolicitudeType;
			}
			set
			{
				if ((this._sSolicitudeType != value))
				{
					this.OnsSolicitudeTypeChanging(value);
					this.SendPropertyChanging();
					this._sSolicitudeType = value;
					this.SendPropertyChanged("sSolicitudeType");
					this.OnsSolicitudeTypeChanged();
				}
			}
		}
		
		[Column(Storage="_SolicitorID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SolicitorID
		{
			get
			{
				return this._SolicitorID;
			}
			set
			{
				if ((this._SolicitorID != value))
				{
					this.OnSolicitorIDChanging(value);
					this.SendPropertyChanging();
					this._SolicitorID = value;
					this.SendPropertyChanged("SolicitorID");
					this.OnSolicitorIDChanged();
				}
			}
		}
		
		[Column(Storage="_RelativeID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> RelativeID
		{
			get
			{
				return this._RelativeID;
			}
			set
			{
				if ((this._RelativeID != value))
				{
					this.OnRelativeIDChanging(value);
					this.SendPropertyChanging();
					this._RelativeID = value;
					this.SendPropertyChanged("RelativeID");
					this.OnRelativeIDChanged();
				}
			}
		}
		
		[Column(Storage="_RelativeName", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string RelativeName
		{
			get
			{
				return this._RelativeName;
			}
			set
			{
				if ((this._RelativeName != value))
				{
					this.OnRelativeNameChanging(value);
					this.SendPropertyChanging();
					this._RelativeName = value;
					this.SendPropertyChanged("RelativeName");
					this.OnRelativeNameChanged();
				}
			}
		}
		
		[Column(Storage="_KinshipName", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string KinshipName
		{
			get
			{
				return this._KinshipName;
			}
			set
			{
				if ((this._KinshipName != value))
				{
					this.OnKinshipNameChanging(value);
					this.SendPropertyChanging();
					this._KinshipName = value;
					this.SendPropertyChanged("KinshipName");
					this.OnKinshipNameChanged();
				}
			}
		}
		
		[Column(Storage="_Observations", DbType="VarChar(2000)", UpdateCheck=UpdateCheck.Never)]
		public string Observations
		{
			get
			{
				return this._Observations;
			}
			set
			{
				if ((this._Observations != value))
				{
					this.OnObservationsChanging(value);
					this.SendPropertyChanging();
					this._Observations = value;
					this.SendPropertyChanged("Observations");
					this.OnObservationsChanged();
				}
			}
		}
		
		[Column(Storage="_LocationID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
	}
	
	public partial class ModifySolicitude : NamedEntity
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		private int _StatusID;
		
		private int _TreatmentID;
		
		private System.Nullable<System.DateTime> _BeginDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<System.DateTime> _ReceptionDate;
		
		private System.Nullable<int> _SolicitorID;
		
		private System.Nullable<int> _RelativeID;
		
		private string _RelativeName;
		
		private string _KinshipName;
		
		private string _Observations;
		
		private System.Nullable<int> _LocationID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnTreatmentIDChanging(int value);
    partial void OnTreatmentIDChanged();
    partial void OnBeginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBeginDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnReceptionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceptionDateChanged();
    partial void OnSolicitorIDChanging(System.Nullable<int> value);
    partial void OnSolicitorIDChanged();
    partial void OnRelativeIDChanging(System.Nullable<int> value);
    partial void OnRelativeIDChanged();
    partial void OnRelativeNameChanging(string value);
    partial void OnRelativeNameChanged();
    partial void OnKinshipNameChanging(string value);
    partial void OnKinshipNameChanged();
    partial void OnObservationsChanging(string value);
    partial void OnObservationsChanged();
    partial void OnLocationIDChanging(System.Nullable<int> value);
    partial void OnLocationIDChanged();
    #endregion
		
		public ModifySolicitude()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public override System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public override string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_StatusID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[Column(Storage="_TreatmentID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public int TreatmentID
		{
			get
			{
				return this._TreatmentID;
			}
			set
			{
				if ((this._TreatmentID != value))
				{
					this.OnTreatmentIDChanging(value);
					this.SendPropertyChanging();
					this._TreatmentID = value;
					this.SendPropertyChanged("TreatmentID");
					this.OnTreatmentIDChanged();
				}
			}
		}
		
		[Column(Storage="_BeginDate", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> BeginDate
		{
			get
			{
				return this._BeginDate;
			}
			set
			{
				if ((this._BeginDate != value))
				{
					this.OnBeginDateChanging(value);
					this.SendPropertyChanging();
					this._BeginDate = value;
					this.SendPropertyChanged("BeginDate");
					this.OnBeginDateChanged();
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_ReceptionDate", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ReceptionDate
		{
			get
			{
				return this._ReceptionDate;
			}
			set
			{
				if ((this._ReceptionDate != value))
				{
					this.OnReceptionDateChanging(value);
					this.SendPropertyChanging();
					this._ReceptionDate = value;
					this.SendPropertyChanged("ReceptionDate");
					this.OnReceptionDateChanged();
				}
			}
		}
		
		[Column(Storage="_SolicitorID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SolicitorID
		{
			get
			{
				return this._SolicitorID;
			}
			set
			{
				if ((this._SolicitorID != value))
				{
					this.OnSolicitorIDChanging(value);
					this.SendPropertyChanging();
					this._SolicitorID = value;
					this.SendPropertyChanged("SolicitorID");
					this.OnSolicitorIDChanged();
				}
			}
		}
		
		[Column(Storage="_RelativeID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> RelativeID
		{
			get
			{
				return this._RelativeID;
			}
			set
			{
				if ((this._RelativeID != value))
				{
					this.OnRelativeIDChanging(value);
					this.SendPropertyChanging();
					this._RelativeID = value;
					this.SendPropertyChanged("RelativeID");
					this.OnRelativeIDChanged();
				}
			}
		}
		
		[Column(Storage="_RelativeName", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string RelativeName
		{
			get
			{
				return this._RelativeName;
			}
			set
			{
				if ((this._RelativeName != value))
				{
					this.OnRelativeNameChanging(value);
					this.SendPropertyChanging();
					this._RelativeName = value;
					this.SendPropertyChanged("RelativeName");
					this.OnRelativeNameChanged();
				}
			}
		}
		
		[Column(Storage="_KinshipName", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string KinshipName
		{
			get
			{
				return this._KinshipName;
			}
			set
			{
				if ((this._KinshipName != value))
				{
					this.OnKinshipNameChanging(value);
					this.SendPropertyChanging();
					this._KinshipName = value;
					this.SendPropertyChanged("KinshipName");
					this.OnKinshipNameChanged();
				}
			}
		}
		
		[Column(Storage="_Observations", DbType="VarChar(2000)", UpdateCheck=UpdateCheck.Never)]
		public string Observations
		{
			get
			{
				return this._Observations;
			}
			set
			{
				if ((this._Observations != value))
				{
					this.OnObservationsChanging(value);
					this.SendPropertyChanging();
					this._Observations = value;
					this.SendPropertyChanged("Observations");
					this.OnObservationsChanged();
				}
			}
		}
		
		[Column(Storage="_LocationID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
	}
	
	public partial class SolicitudeItem : NamedEntity
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		private System.Nullable<int> _ProductID;
		
		private System.Nullable<int> _Ammount;
		
		private System.Nullable<int> _Dose;
		
		private System.Nullable<int> _Hours;
		
		private System.Nullable<int> _Days;
		
		private System.Nullable<decimal> _Value;
		
		private string _Treatement;
		
		private System.Nullable<System.DateTime> _Expiration;
		
		private System.Nullable<System.DateTime> _ReceiptInitialDate;
		
		private System.Nullable<System.DateTime> _ReceiptFinalDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnProductIDChanging(System.Nullable<int> value);
    partial void OnProductIDChanged();
    partial void OnAmmountChanging(System.Nullable<int> value);
    partial void OnAmmountChanged();
    partial void OnDoseChanging(System.Nullable<int> value);
    partial void OnDoseChanged();
    partial void OnHoursChanging(System.Nullable<int> value);
    partial void OnHoursChanged();
    partial void OnDaysChanging(System.Nullable<int> value);
    partial void OnDaysChanged();
    partial void OnValueChanging(System.Nullable<decimal> value);
    partial void OnValueChanged();
    partial void OnTreatementChanging(string value);
    partial void OnTreatementChanged();
    partial void OnExpirationChanging(System.Nullable<System.DateTime> value);
    partial void OnExpirationChanged();
    partial void OnReceiptInitialDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceiptInitialDateChanged();
    partial void OnReceiptFinalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceiptFinalDateChanged();
    #endregion
		
		public SolicitudeItem()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public override System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public override string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_ProductID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[Column(Storage="_Ammount", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Ammount
		{
			get
			{
				return this._Ammount;
			}
			set
			{
				if ((this._Ammount != value))
				{
					this.OnAmmountChanging(value);
					this.SendPropertyChanging();
					this._Ammount = value;
					this.SendPropertyChanged("Ammount");
					this.OnAmmountChanged();
				}
			}
		}
		
		[Column(Storage="_Dose", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Dose
		{
			get
			{
				return this._Dose;
			}
			set
			{
				if ((this._Dose != value))
				{
					this.OnDoseChanging(value);
					this.SendPropertyChanging();
					this._Dose = value;
					this.SendPropertyChanged("Dose");
					this.OnDoseChanged();
				}
			}
		}
		
		[Column(Storage="_Hours", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this.OnHoursChanging(value);
					this.SendPropertyChanging();
					this._Hours = value;
					this.SendPropertyChanged("Hours");
					this.OnHoursChanged();
				}
			}
		}
		
		[Column(Storage="_Days", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._Days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}
		
		[Column(Storage="_Value", DbType="numeric(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[Column(Name="sSolicitudeType", Storage="_Treatement", DbType="VARCHAR(40)", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Treatement
		{
			get
			{
				return this._Treatement;
			}
			set
			{
				if ((this._Treatement != value))
				{
					this.OnTreatementChanging(value);
					this.SendPropertyChanging();
					this._Treatement = value;
					this.SendPropertyChanged("Treatement");
					this.OnTreatementChanged();
				}
			}
		}
		
		[Column(Name="dtExpiration", Storage="_Expiration", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Expiration
		{
			get
			{
				return this._Expiration;
			}
			set
			{
				if ((this._Expiration != value))
				{
					this.OnExpirationChanging(value);
					this.SendPropertyChanging();
					this._Expiration = value;
					this.SendPropertyChanged("Expiration");
					this.OnExpirationChanged();
				}
			}
		}
		
		[Column(Name="dtReceiptInitialDate", Storage="_ReceiptInitialDate", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ReceiptInitialDate
		{
			get
			{
				return this._ReceiptInitialDate;
			}
			set
			{
				if ((this._ReceiptInitialDate != value))
				{
					this.OnReceiptInitialDateChanging(value);
					this.SendPropertyChanging();
					this._ReceiptInitialDate = value;
					this.SendPropertyChanged("ReceiptInitialDate");
					this.OnReceiptInitialDateChanged();
				}
			}
		}
		
		[Column(Name="dtReceiptFinalDate", Storage="_ReceiptFinalDate", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ReceiptFinalDate
		{
			get
			{
				return this._ReceiptFinalDate;
			}
			set
			{
				if ((this._ReceiptFinalDate != value))
				{
					this.OnReceiptFinalDateChanging(value);
					this.SendPropertyChanging();
					this._ReceiptFinalDate = value;
					this.SendPropertyChanged("ReceiptFinalDate");
					this.OnReceiptFinalDateChanged();
				}
			}
		}
	}
	
	public partial class Relative : NamedEntity
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		private string _RUT;
		
		private System.Nullable<System.DateTime> _BornDate;
		
		private string _Status;
		
		private System.Nullable<int> _KinshipID;
		
		private System.Nullable<int> _SolicitorID;
		
		private string _UserName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRUTChanging(string value);
    partial void OnRUTChanged();
    partial void OnBornDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBornDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnKinshipIDChanging(System.Nullable<int> value);
    partial void OnKinshipIDChanged();
    partial void OnSolicitorIDChanging(System.Nullable<int> value);
    partial void OnSolicitorIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public Relative()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public override System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(80) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public override string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_RUT", DbType="VarChar(20) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public string RUT
		{
			get
			{
				return this._RUT;
			}
			set
			{
				if ((this._RUT != value))
				{
					this.OnRUTChanging(value);
					this.SendPropertyChanging();
					this._RUT = value;
					this.SendPropertyChanged("RUT");
					this.OnRUTChanged();
				}
			}
		}
		
		[Column(Storage="_BornDate", DbType="datetime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> BornDate
		{
			get
			{
				return this._BornDate;
			}
			set
			{
				if ((this._BornDate != value))
				{
					this.OnBornDateChanging(value);
					this.SendPropertyChanging();
					this._BornDate = value;
					this.SendPropertyChanged("BornDate");
					this.OnBornDateChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VARCHAR(1) not null", UpdateCheck=UpdateCheck.Never)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_KinshipID", DbType="Int not null", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> KinshipID
		{
			get
			{
				return this._KinshipID;
			}
			set
			{
				if ((this._KinshipID != value))
				{
					this.OnKinshipIDChanging(value);
					this.SendPropertyChanging();
					this._KinshipID = value;
					this.SendPropertyChanged("KinshipID");
					this.OnKinshipIDChanged();
				}
			}
		}
		
		[Column(Storage="_SolicitorID", DbType="Int not null", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SolicitorID
		{
			get
			{
				return this._SolicitorID;
			}
			set
			{
				if ((this._SolicitorID != value))
				{
					this.OnSolicitorIDChanging(value);
					this.SendPropertyChanging();
					this._SolicitorID = value;
					this.SendPropertyChanged("SolicitorID");
					this.OnSolicitorIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="VARCHAR(100) not null", UpdateCheck=UpdateCheck.Never)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
	}
	
	public partial class ListedRelative : NamedEntity
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		private string _RUT;
		
		private System.Nullable<System.DateTime> _BornDate;
		
		private string _Status;
		
		private System.Nullable<int> _KinshipID;
		
		private System.Nullable<int> _SolicitorID;
		
		private string _UserName;
		
		private string _KinshipName;
		
		private string _KinshipKindName;
		
		private bool _Process;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRUTChanging(string value);
    partial void OnRUTChanged();
    partial void OnBornDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBornDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnKinshipIDChanging(System.Nullable<int> value);
    partial void OnKinshipIDChanged();
    partial void OnSolicitorIDChanging(System.Nullable<int> value);
    partial void OnSolicitorIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnKinshipNameChanging(string value);
    partial void OnKinshipNameChanged();
    partial void OnKinshipKindNameChanging(string value);
    partial void OnKinshipKindNameChanged();
    partial void OnProcessChanging(bool value);
    partial void OnProcessChanged();
    #endregion
		
		public ListedRelative()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public override System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(80) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public override string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_RUT", DbType="VarChar(20) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public string RUT
		{
			get
			{
				return this._RUT;
			}
			set
			{
				if ((this._RUT != value))
				{
					this.OnRUTChanging(value);
					this.SendPropertyChanging();
					this._RUT = value;
					this.SendPropertyChanged("RUT");
					this.OnRUTChanged();
				}
			}
		}
		
		[Column(Storage="_BornDate", DbType="datetime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> BornDate
		{
			get
			{
				return this._BornDate;
			}
			set
			{
				if ((this._BornDate != value))
				{
					this.OnBornDateChanging(value);
					this.SendPropertyChanging();
					this._BornDate = value;
					this.SendPropertyChanged("BornDate");
					this.OnBornDateChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VARCHAR(1) not null", UpdateCheck=UpdateCheck.Never)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_KinshipID", DbType="Int not null", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> KinshipID
		{
			get
			{
				return this._KinshipID;
			}
			set
			{
				if ((this._KinshipID != value))
				{
					this.OnKinshipIDChanging(value);
					this.SendPropertyChanging();
					this._KinshipID = value;
					this.SendPropertyChanged("KinshipID");
					this.OnKinshipIDChanged();
				}
			}
		}
		
		[Column(Storage="_SolicitorID", DbType="Int not null", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SolicitorID
		{
			get
			{
				return this._SolicitorID;
			}
			set
			{
				if ((this._SolicitorID != value))
				{
					this.OnSolicitorIDChanging(value);
					this.SendPropertyChanging();
					this._SolicitorID = value;
					this.SendPropertyChanged("SolicitorID");
					this.OnSolicitorIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="VARCHAR(100) not null", UpdateCheck=UpdateCheck.Never)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_KinshipName", DbType="VARCHAR(100) not null", UpdateCheck=UpdateCheck.Never)]
		public string KinshipName
		{
			get
			{
				return this._KinshipName;
			}
			set
			{
				if ((this._KinshipName != value))
				{
					this.OnKinshipNameChanging(value);
					this.SendPropertyChanging();
					this._KinshipName = value;
					this.SendPropertyChanged("KinshipName");
					this.OnKinshipNameChanged();
				}
			}
		}
		
		[Column(Storage="_KinshipKindName", DbType="VARCHAR(100) not null", UpdateCheck=UpdateCheck.Never)]
		public string KinshipKindName
		{
			get
			{
				return this._KinshipKindName;
			}
			set
			{
				if ((this._KinshipKindName != value))
				{
					this.OnKinshipKindNameChanging(value);
					this.SendPropertyChanging();
					this._KinshipKindName = value;
					this.SendPropertyChanged("KinshipKindName");
					this.OnKinshipKindNameChanged();
				}
			}
		}
		
		[Column(Storage="_Process", UpdateCheck=UpdateCheck.Never)]
		public bool Process
		{
			get
			{
				return this._Process;
			}
			set
			{
				if ((this._Process != value))
				{
					this.OnProcessChanging(value);
					this.SendPropertyChanging();
					this._Process = value;
					this.SendPropertyChanged("Process");
					this.OnProcessChanged();
				}
			}
		}
	}
	
	public partial class Location : NamedEntity
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Location()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public override System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public override string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
	}
	
	[Table(Name="")]
	public partial class Word
	{
		
		private System.Nullable<int> _LanguageID;
		
		private string _Name;
		
		private string _Description;
		
		public Word()
		{
		}
		
		[Column(Storage="_LanguageID", DbType="Int NOT NULL ", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this._LanguageID = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(500) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[Table(Name="")]
	public partial class SolicitudeToPrintResult
	{
		
		private System.Nullable<int> _nSolicitude;
		
		private string _sDepartment;
		
		private System.Nullable<System.DateTime> _dtDate;
		
		private string _sTypeSolicitor;
		
		private string _sSolicitorFirstName;
		
		private string _sSolicitorLastName;
		
		private System.Nullable<int> _nAmount;
		
		private string _sProduct;
		
		private string _sProductName;
		
		private string _sObservation;
		
		private string _sSolicitudeType;
		
		private System.Nullable<System.DateTime> _dtExpiration;
		
		public SolicitudeToPrintResult()
		{
		}
		
		[Column(Storage="_nSolicitude", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> nSolicitude
		{
			get
			{
				return this._nSolicitude;
			}
			set
			{
				if ((this._nSolicitude != value))
				{
					this._nSolicitude = value;
				}
			}
		}
		
		[Column(Storage="_sDepartment", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string sDepartment
		{
			get
			{
				return this._sDepartment;
			}
			set
			{
				if ((this._sDepartment != value))
				{
					this._sDepartment = value;
				}
			}
		}
		
		[Column(Storage="_dtDate", DbType="smalldatetime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> dtDate
		{
			get
			{
				return this._dtDate;
			}
			set
			{
				if ((this._dtDate != value))
				{
					this._dtDate = value;
				}
			}
		}
		
		[Column(Storage="_sTypeSolicitor", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string sTypeSolicitor
		{
			get
			{
				return this._sTypeSolicitor;
			}
			set
			{
				if ((this._sTypeSolicitor != value))
				{
					this._sTypeSolicitor = value;
				}
			}
		}
		
		[Column(Storage="_sSolicitorFirstName", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string sSolicitorFirstName
		{
			get
			{
				return this._sSolicitorFirstName;
			}
			set
			{
				if ((this._sSolicitorFirstName != value))
				{
					this._sSolicitorFirstName = value;
				}
			}
		}
		
		[Column(Storage="_sSolicitorLastName", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string sSolicitorLastName
		{
			get
			{
				return this._sSolicitorLastName;
			}
			set
			{
				if ((this._sSolicitorLastName != value))
				{
					this._sSolicitorLastName = value;
				}
			}
		}
		
		[Column(Storage="_nAmount", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> nAmount
		{
			get
			{
				return this._nAmount;
			}
			set
			{
				if ((this._nAmount != value))
				{
					this._nAmount = value;
				}
			}
		}
		
		[Column(Storage="_sProduct", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string sProduct
		{
			get
			{
				return this._sProduct;
			}
			set
			{
				if ((this._sProduct != value))
				{
					this._sProduct = value;
				}
			}
		}
		
		[Column(Storage="_sProductName", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string sProductName
		{
			get
			{
				return this._sProductName;
			}
			set
			{
				if ((this._sProductName != value))
				{
					this._sProductName = value;
				}
			}
		}
		
		[Column(Storage="_sObservation", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string sObservation
		{
			get
			{
				return this._sObservation;
			}
			set
			{
				if ((this._sObservation != value))
				{
					this._sObservation = value;
				}
			}
		}
		
		[Column(Storage="_sSolicitudeType", DbType="VarChar(40)", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string sSolicitudeType
		{
			get
			{
				return this._sSolicitudeType;
			}
			set
			{
				if ((this._sSolicitudeType != value))
				{
					this._sSolicitudeType = value;
				}
			}
		}
		
		[Column(Storage="_dtExpiration", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> dtExpiration
		{
			get
			{
				return this._dtExpiration;
			}
			set
			{
				if ((this._dtExpiration != value))
				{
					this._dtExpiration = value;
				}
			}
		}
	}
	
	[Table(Name="")]
	[InheritanceMapping(Code="0", Type=typeof(NamedEntityS), IsDefault=true)]
	public partial class NamedEntityS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public NamedEntityS()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="VarChar(100) NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public virtual string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never, IsDiscriminator=true)]
		public virtual string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class ProductOrigin : NamedEntityS
	{
		
		private string _ID;
		
		private string _Name;
		
		private System.Nullable<int> _Stock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStockChanging(System.Nullable<int> value);
    partial void OnStockChanged();
    #endregion
		
		public ProductOrigin()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="VarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public override string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public override string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Stock", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this.OnStockChanging(value);
					this.SendPropertyChanging();
					this._Stock = value;
					this.SendPropertyChanged("Stock");
					this.OnStockChanged();
				}
			}
		}
	}
	
	public partial class Usuarios_ConsulResult
	{
		
		private System.Nullable<long> _Value;
		
		public Usuarios_ConsulResult()
		{
		}
		
		[Column(Name="IdPerfil", Storage="_Value", DbType="BigInt")]
		public System.Nullable<long> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
	
	public partial class ObtenerIDUsuario_ByCodigoNTResult
	{
		
		private long _Value;
		
		public ObtenerIDUsuario_ByCodigoNTResult()
		{
		}
		
		[Column(Name="PK_SEGUsuario", Storage="_Value", DbType="BigInt NOT NULL")]
		public long Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
	
	public partial class ObtenerEmplIDUsuario_ByCodigoNTResult
	{
		
		private System.Nullable<int> _Value;
		
		public ObtenerEmplIDUsuario_ByCodigoNTResult()
		{
		}
		
		[Column(Name="nEmplID", Storage="_Value", DbType="Int")]
		public System.Nullable<int> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
	
	public partial class ObtenerNombreUsuario_ByCodigoNTResult
	{
		
		private string _Value;
		
		public ObtenerNombreUsuario_ByCodigoNTResult()
		{
		}
		
		[Column(Name="cDescripcion", Storage="_Value", DbType="VarChar(80)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
	
	public partial class Menu
	{
		
		private long _ID;
		
		private string _Root;
		
		private string _Description;
		
		public Menu()
		{
		}
		
		[Column(Name="PK_SEGModulosMenu", Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Name="Url", Storage="_Root", DbType="VarChar(150)")]
		public string Root
		{
			get
			{
				return this._Root;
			}
			set
			{
				if ((this._Root != value))
				{
					this._Root = value;
				}
			}
		}
		
		[Column(Name="Descripcion", Storage="_Description", DbType="VarChar(60)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	public partial class ProductSolicitorKind
	{
		
		private int _ProductID;
		
		private int _AmmountPerSolicitude;
		
		public ProductSolicitorKind()
		{
		}
		
		[Column(Storage="_ProductID", DbType="Int")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[Column(Storage="_AmmountPerSolicitude", DbType="Int")]
		public int AmmountPerSolicitude
		{
			get
			{
				return this._AmmountPerSolicitude;
			}
			set
			{
				if ((this._AmmountPerSolicitude != value))
				{
					this._AmmountPerSolicitude = value;
				}
			}
		}
	}
	
	public partial class Perfil_GenericoResult
	{
		
		private System.Nullable<long> _Value;
		
		public Perfil_GenericoResult()
		{
		}
		
		[Column(Name="IdPerfil", Storage="_Value", DbType="BigInt")]
		public System.Nullable<long> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
	
	public partial class ProductStock_Result
	{
		
		private string _sProduct;
		
		private string _sProductName;
		
		private System.Nullable<int> _nStockPhysical;
		
		private System.Nullable<int> _nStockMin;
		
		private System.Nullable<int> _nStockCommitted;
		
		public ProductStock_Result()
		{
		}
		
		[Column(Storage="_sProduct", DbType="VarChar(30)")]
		public string sProduct
		{
			get
			{
				return this._sProduct;
			}
			set
			{
				if ((this._sProduct != value))
				{
					this._sProduct = value;
				}
			}
		}
		
		[Column(Storage="_sProductName", DbType="VarChar(200)")]
		public string sProductName
		{
			get
			{
				return this._sProductName;
			}
			set
			{
				if ((this._sProductName != value))
				{
					this._sProductName = value;
				}
			}
		}
		
		[Column(Storage="_nStockPhysical", DbType="Int")]
		public System.Nullable<int> nStockPhysical
		{
			get
			{
				return this._nStockPhysical;
			}
			set
			{
				if ((this._nStockPhysical != value))
				{
					this._nStockPhysical = value;
				}
			}
		}
		
		[Column(Storage="_nStockMin", DbType="Int")]
		public System.Nullable<int> nStockMin
		{
			get
			{
				return this._nStockMin;
			}
			set
			{
				if ((this._nStockMin != value))
				{
					this._nStockMin = value;
				}
			}
		}
		
		[Column(Storage="_nStockCommitted", DbType="Int")]
		public System.Nullable<int> nStockCommitted
		{
			get
			{
				return this._nStockCommitted;
			}
			set
			{
				if ((this._nStockCommitted != value))
				{
					this._nStockCommitted = value;
				}
			}
		}
	}
	
	public partial class UsersResult
	{
		
		private int _nUserID;
		
		private string _sUserLogin;
		
		private string _sName;
		
		private string _sUserName;
		
		private string _sUserSurname;
		
		private string _sUserEMail;
		
		private System.Nullable<System.DateTime> _dtUserDeleteDate;
		
		private System.Nullable<int> _nRequestsForOtherUsers;
		
		private System.Nullable<int> _nUserEmplID;
		
		public UsersResult()
		{
		}
		
		[Column(Storage="_nUserID", DbType="int")]
		public int nUserID
		{
			get
			{
				return this._nUserID;
			}
			set
			{
				if ((this._nUserID != value))
				{
					this._nUserID = value;
				}
			}
		}
		
		[Column(Storage="_sUserLogin", DbType="VarChar(100)", CanBeNull=false)]
		public string sUserLogin
		{
			get
			{
				return this._sUserLogin;
			}
			set
			{
				if ((this._sUserLogin != value))
				{
					this._sUserLogin = value;
				}
			}
		}
		
		[Column(Storage="_sName", DbType="VarChar(100)", CanBeNull=false)]
		public string sName
		{
			get
			{
				return this._sName;
			}
			set
			{
				if ((this._sName != value))
				{
					this._sName = value;
				}
			}
		}
		
		[Column(Storage="_sUserName", DbType="VarChar(100)", CanBeNull=false)]
		public string sUserName
		{
			get
			{
				return this._sUserName;
			}
			set
			{
				if ((this._sUserName != value))
				{
					this._sUserName = value;
				}
			}
		}
		
		[Column(Storage="_sUserSurname", DbType="VarChar(100)", CanBeNull=false)]
		public string sUserSurname
		{
			get
			{
				return this._sUserSurname;
			}
			set
			{
				if ((this._sUserSurname != value))
				{
					this._sUserSurname = value;
				}
			}
		}
		
		[Column(Storage="_sUserEMail", DbType="VarChar(100)", CanBeNull=false)]
		public string sUserEMail
		{
			get
			{
				return this._sUserEMail;
			}
			set
			{
				if ((this._sUserEMail != value))
				{
					this._sUserEMail = value;
				}
			}
		}
		
		[Column(Storage="_dtUserDeleteDate", DbType="smalldatetime")]
		public System.Nullable<System.DateTime> dtUserDeleteDate
		{
			get
			{
				return this._dtUserDeleteDate;
			}
			set
			{
				if ((this._dtUserDeleteDate != value))
				{
					this._dtUserDeleteDate = value;
				}
			}
		}
		
		[Column(Storage="_nRequestsForOtherUsers", DbType="Bit")]
		public System.Nullable<int> nRequestsForOtherUsers
		{
			get
			{
				return this._nRequestsForOtherUsers;
			}
			set
			{
				if ((this._nRequestsForOtherUsers != value))
				{
					this._nRequestsForOtherUsers = value;
				}
			}
		}
		
		[Column(Storage="_nUserEmplID", DbType="Int")]
		public System.Nullable<int> nUserEmplID
		{
			get
			{
				return this._nUserEmplID;
			}
			set
			{
				if ((this._nUserEmplID != value))
				{
					this._nUserEmplID = value;
				}
			}
		}
	}
	
	public partial class EstimateForSolitudeResult
	{
		
		private string _sProductOrigin;
		
		private string _sProductDescription;
		
		private int _nLastMonthsAmmount;
		
		private int _nMonthlyAverage;
		
		private int _nCurrentStock;
		
		private int _nCommittedStock;
		
		private int _nMinimumStock;
		
		private int _nRequestedAmmount;
		
		private int _nAviableStock;
		
		public EstimateForSolitudeResult()
		{
		}
		
		[Column(Storage="_sProductOrigin", DbType="VarChar(100)", CanBeNull=false)]
		public string sProductOrigin
		{
			get
			{
				return this._sProductOrigin;
			}
			set
			{
				if ((this._sProductOrigin != value))
				{
					this._sProductOrigin = value;
				}
			}
		}
		
		[Column(Storage="_sProductDescription", DbType="VarChar(100)", CanBeNull=false)]
		public string sProductDescription
		{
			get
			{
				return this._sProductDescription;
			}
			set
			{
				if ((this._sProductDescription != value))
				{
					this._sProductDescription = value;
				}
			}
		}
		
		[Column(Storage="_nLastMonthsAmmount", DbType="Int")]
		public int nLastMonthsAmmount
		{
			get
			{
				return this._nLastMonthsAmmount;
			}
			set
			{
				if ((this._nLastMonthsAmmount != value))
				{
					this._nLastMonthsAmmount = value;
				}
			}
		}
		
		[Column(Storage="_nMonthlyAverage", DbType="Int")]
		public int nMonthlyAverage
		{
			get
			{
				return this._nMonthlyAverage;
			}
			set
			{
				if ((this._nMonthlyAverage != value))
				{
					this._nMonthlyAverage = value;
				}
			}
		}
		
		[Column(Storage="_nCurrentStock", DbType="Int")]
		public int nCurrentStock
		{
			get
			{
				return this._nCurrentStock;
			}
			set
			{
				if ((this._nCurrentStock != value))
				{
					this._nCurrentStock = value;
				}
			}
		}
		
		[Column(Storage="_nCommittedStock", DbType="Int")]
		public int nCommittedStock
		{
			get
			{
				return this._nCommittedStock;
			}
			set
			{
				if ((this._nCommittedStock != value))
				{
					this._nCommittedStock = value;
				}
			}
		}
		
		[Column(Storage="_nMinimumStock", DbType="Int")]
		public int nMinimumStock
		{
			get
			{
				return this._nMinimumStock;
			}
			set
			{
				if ((this._nMinimumStock != value))
				{
					this._nMinimumStock = value;
				}
			}
		}
		
		[Column(Storage="_nRequestedAmmount", DbType="Int")]
		public int nRequestedAmmount
		{
			get
			{
				return this._nRequestedAmmount;
			}
			set
			{
				if ((this._nRequestedAmmount != value))
				{
					this._nRequestedAmmount = value;
				}
			}
		}
		
		[Column(Storage="_nAviableStock", DbType="Int")]
		public int nAviableStock
		{
			get
			{
				return this._nAviableStock;
			}
			set
			{
				if ((this._nAviableStock != value))
				{
					this._nAviableStock = value;
				}
			}
		}
	}
	
	public partial class ReportSalesAdministrationResult
	{
		
		private System.DateTime _dtBegin;
		
		private string _sEmpID;
		
		private string _sUsuarioName;
		
		private string _sRelativeName;
		
		private string _sProduct;
		
		private string _sProductName;
		
		private int _nAmount;
		
		public ReportSalesAdministrationResult()
		{
		}
		
		[Column(Storage="_dtBegin", DbType="smalldatetime")]
		public System.DateTime dtBegin
		{
			get
			{
				return this._dtBegin;
			}
			set
			{
				if ((this._dtBegin != value))
				{
					this._dtBegin = value;
				}
			}
		}
		
		[Column(Storage="_sEmpID", DbType="VarChar(100)", CanBeNull=false)]
		public string sEmpID
		{
			get
			{
				return this._sEmpID;
			}
			set
			{
				if ((this._sEmpID != value))
				{
					this._sEmpID = value;
				}
			}
		}
		
		[Column(Storage="_sUsuarioName", DbType="VarChar(200)", CanBeNull=false)]
		public string sUsuarioName
		{
			get
			{
				return this._sUsuarioName;
			}
			set
			{
				if ((this._sUsuarioName != value))
				{
					this._sUsuarioName = value;
				}
			}
		}
		
		[Column(Storage="_sRelativeName", DbType="VarChar(100)", CanBeNull=false)]
		public string sRelativeName
		{
			get
			{
				return this._sRelativeName;
			}
			set
			{
				if ((this._sRelativeName != value))
				{
					this._sRelativeName = value;
				}
			}
		}
		
		[Column(Storage="_sProduct", DbType="VarChar(100)", CanBeNull=false)]
		public string sProduct
		{
			get
			{
				return this._sProduct;
			}
			set
			{
				if ((this._sProduct != value))
				{
					this._sProduct = value;
				}
			}
		}
		
		[Column(Storage="_sProductName", DbType="VarChar(100)", CanBeNull=false)]
		public string sProductName
		{
			get
			{
				return this._sProductName;
			}
			set
			{
				if ((this._sProductName != value))
				{
					this._sProductName = value;
				}
			}
		}
		
		[Column(Storage="_nAmount", DbType="Int")]
		public int nAmount
		{
			get
			{
				return this._nAmount;
			}
			set
			{
				if ((this._nAmount != value))
				{
					this._nAmount = value;
				}
			}
		}
	}
	
	public partial class SolicitudeProductDetailResult
	{
		
		private System.DateTime _dtReceptionDate;
		
		private int _nRequestCode;
		
		private string _sStatus;
		
		private string _sSolicitorSurname;
		
		private string _sSolicitorName;
		
		private string _sSolicitorFile;
		
		private string _sProductCode;
		
		private string _sProductDescription;
		
		private int _nProductAmmount;
		
		private decimal _nOriginalAmmount;
		
		private string _sObservations;
		
		private System.Nullable<System.DateTime> _dtRejectionDate;
		
		private System.Nullable<System.DateTime> _dtDeliveryDate;
		
		private string _sSolicitudeType;
		
		private System.Nullable<System.DateTime> _dtExpiration;
		
		private System.Nullable<System.DateTime> _dtReceiptInitialDate;
		
		private System.Nullable<System.DateTime> _dtReceiptFinalDate;
		
		public SolicitudeProductDetailResult()
		{
		}
		
		[Column(Storage="_dtReceptionDate", DbType="smalldatetime")]
		public System.DateTime dtReceptionDate
		{
			get
			{
				return this._dtReceptionDate;
			}
			set
			{
				if ((this._dtReceptionDate != value))
				{
					this._dtReceptionDate = value;
				}
			}
		}
		
		[Column(Storage="_nRequestCode", DbType="Int")]
		public int nRequestCode
		{
			get
			{
				return this._nRequestCode;
			}
			set
			{
				if ((this._nRequestCode != value))
				{
					this._nRequestCode = value;
				}
			}
		}
		
		[Column(Storage="_sStatus", DbType="VarChar(100)", CanBeNull=false)]
		public string sStatus
		{
			get
			{
				return this._sStatus;
			}
			set
			{
				if ((this._sStatus != value))
				{
					this._sStatus = value;
				}
			}
		}
		
		[Column(Storage="_sSolicitorSurname", DbType="VarChar(100)", CanBeNull=false)]
		public string sSolicitorSurname
		{
			get
			{
				return this._sSolicitorSurname;
			}
			set
			{
				if ((this._sSolicitorSurname != value))
				{
					this._sSolicitorSurname = value;
				}
			}
		}
		
		[Column(Storage="_sSolicitorName", DbType="VarChar(100)", CanBeNull=false)]
		public string sSolicitorName
		{
			get
			{
				return this._sSolicitorName;
			}
			set
			{
				if ((this._sSolicitorName != value))
				{
					this._sSolicitorName = value;
				}
			}
		}
		
		[Column(Storage="_sSolicitorFile", DbType="VarChar(100)", CanBeNull=false)]
		public string sSolicitorFile
		{
			get
			{
				return this._sSolicitorFile;
			}
			set
			{
				if ((this._sSolicitorFile != value))
				{
					this._sSolicitorFile = value;
				}
			}
		}
		
		[Column(Storage="_sProductCode", DbType="VarChar(100)", CanBeNull=false)]
		public string sProductCode
		{
			get
			{
				return this._sProductCode;
			}
			set
			{
				if ((this._sProductCode != value))
				{
					this._sProductCode = value;
				}
			}
		}
		
		[Column(Storage="_sProductDescription", DbType="VarChar(100)", CanBeNull=false)]
		public string sProductDescription
		{
			get
			{
				return this._sProductDescription;
			}
			set
			{
				if ((this._sProductDescription != value))
				{
					this._sProductDescription = value;
				}
			}
		}
		
		[Column(Storage="_nProductAmmount", DbType="Int")]
		public int nProductAmmount
		{
			get
			{
				return this._nProductAmmount;
			}
			set
			{
				if ((this._nProductAmmount != value))
				{
					this._nProductAmmount = value;
				}
			}
		}
		
		[Column(Storage="_nOriginalAmmount", DbType="Decimal")]
		public decimal nOriginalAmmount
		{
			get
			{
				return this._nOriginalAmmount;
			}
			set
			{
				if ((this._nOriginalAmmount != value))
				{
					this._nOriginalAmmount = value;
				}
			}
		}
		
		[Column(Storage="_sObservations", DbType="VarChar(100)", CanBeNull=false)]
		public string sObservations
		{
			get
			{
				return this._sObservations;
			}
			set
			{
				if ((this._sObservations != value))
				{
					this._sObservations = value;
				}
			}
		}
		
		[Column(Storage="_dtRejectionDate", DbType="smalldatetime")]
		public System.Nullable<System.DateTime> dtRejectionDate
		{
			get
			{
				return this._dtRejectionDate;
			}
			set
			{
				if ((this._dtRejectionDate != value))
				{
					this._dtRejectionDate = value;
				}
			}
		}
		
		[Column(Storage="_dtDeliveryDate", DbType="smalldatetime")]
		public System.Nullable<System.DateTime> dtDeliveryDate
		{
			get
			{
				return this._dtDeliveryDate;
			}
			set
			{
				if ((this._dtDeliveryDate != value))
				{
					this._dtDeliveryDate = value;
				}
			}
		}
		
		[Column(Storage="_sSolicitudeType", DbType="VarChar(100)", CanBeNull=false)]
		public string sSolicitudeType
		{
			get
			{
				return this._sSolicitudeType;
			}
			set
			{
				if ((this._sSolicitudeType != value))
				{
					this._sSolicitudeType = value;
				}
			}
		}
		
		[Column(Storage="_dtExpiration", DbType="smalldatetime")]
		public System.Nullable<System.DateTime> dtExpiration
		{
			get
			{
				return this._dtExpiration;
			}
			set
			{
				if ((this._dtExpiration != value))
				{
					this._dtExpiration = value;
				}
			}
		}
		
		[Column(Storage="_dtReceiptInitialDate", DbType="smalldatetime")]
		public System.Nullable<System.DateTime> dtReceiptInitialDate
		{
			get
			{
				return this._dtReceiptInitialDate;
			}
			set
			{
				if ((this._dtReceiptInitialDate != value))
				{
					this._dtReceiptInitialDate = value;
				}
			}
		}
		
		[Column(Storage="_dtReceiptFinalDate", DbType="smalldatetime")]
		public System.Nullable<System.DateTime> dtReceiptFinalDate
		{
			get
			{
				return this._dtReceiptFinalDate;
			}
			set
			{
				if ((this._dtReceiptFinalDate != value))
				{
					this._dtReceiptFinalDate = value;
				}
			}
		}
	}
	
	public partial class RequestsResult
	{
		
		private int _nRequestCode;
		
		private string _sStatus;
		
		private string _sCreationUser;
		
		private string _sApprovalUser;
		
		private System.Nullable<System.DateTime> _dtApprovalDate;
		
		private System.Nullable<System.DateTime> _dtRejectionDate;
		
		private System.Nullable<System.DateTime> _dtDeliveryDate;
		
		private string _sSolicitorSurname;
		
		private string _sSolicitorName;
		
		private string _sObservations;
		
		private string _sLocation;
		
		private string _sSolicitudeType;
		
		private System.Nullable<System.DateTime> _dtExpiration;
		
		private System.Nullable<System.DateTime> _dtReceiptInitialDate;
		
		private System.Nullable<System.DateTime> _dtReceiptFinalDate;
		
		public RequestsResult()
		{
		}
		
		[Column(Storage="_nRequestCode", DbType="Int")]
		public int nRequestCode
		{
			get
			{
				return this._nRequestCode;
			}
			set
			{
				if ((this._nRequestCode != value))
				{
					this._nRequestCode = value;
				}
			}
		}
		
		[Column(Storage="_sStatus", DbType="VarChar(100)", CanBeNull=false)]
		public string sStatus
		{
			get
			{
				return this._sStatus;
			}
			set
			{
				if ((this._sStatus != value))
				{
					this._sStatus = value;
				}
			}
		}
		
		[Column(Storage="_sCreationUser", DbType="VarChar(100)", CanBeNull=false)]
		public string sCreationUser
		{
			get
			{
				return this._sCreationUser;
			}
			set
			{
				if ((this._sCreationUser != value))
				{
					this._sCreationUser = value;
				}
			}
		}
		
		[Column(Storage="_sApprovalUser", DbType="VarChar(100)", CanBeNull=false)]
		public string sApprovalUser
		{
			get
			{
				return this._sApprovalUser;
			}
			set
			{
				if ((this._sApprovalUser != value))
				{
					this._sApprovalUser = value;
				}
			}
		}
		
		[Column(Storage="_dtApprovalDate", DbType="smalldatetime")]
		public System.Nullable<System.DateTime> dtApprovalDate
		{
			get
			{
				return this._dtApprovalDate;
			}
			set
			{
				if ((this._dtApprovalDate != value))
				{
					this._dtApprovalDate = value;
				}
			}
		}
		
		[Column(Storage="_dtRejectionDate", DbType="smalldatetime")]
		public System.Nullable<System.DateTime> dtRejectionDate
		{
			get
			{
				return this._dtRejectionDate;
			}
			set
			{
				if ((this._dtRejectionDate != value))
				{
					this._dtRejectionDate = value;
				}
			}
		}
		
		[Column(Storage="_dtDeliveryDate", DbType="smalldatetime")]
		public System.Nullable<System.DateTime> dtDeliveryDate
		{
			get
			{
				return this._dtDeliveryDate;
			}
			set
			{
				if ((this._dtDeliveryDate != value))
				{
					this._dtDeliveryDate = value;
				}
			}
		}
		
		[Column(Storage="_sSolicitorSurname", DbType="VarChar(100)", CanBeNull=false)]
		public string sSolicitorSurname
		{
			get
			{
				return this._sSolicitorSurname;
			}
			set
			{
				if ((this._sSolicitorSurname != value))
				{
					this._sSolicitorSurname = value;
				}
			}
		}
		
		[Column(Storage="_sSolicitorName", DbType="VarChar(100)", CanBeNull=false)]
		public string sSolicitorName
		{
			get
			{
				return this._sSolicitorName;
			}
			set
			{
				if ((this._sSolicitorName != value))
				{
					this._sSolicitorName = value;
				}
			}
		}
		
		[Column(Storage="_sObservations", DbType="VarChar(100)", CanBeNull=false)]
		public string sObservations
		{
			get
			{
				return this._sObservations;
			}
			set
			{
				if ((this._sObservations != value))
				{
					this._sObservations = value;
				}
			}
		}
		
		[Column(Storage="_sLocation", DbType="VarChar(100)", CanBeNull=false)]
		public string sLocation
		{
			get
			{
				return this._sLocation;
			}
			set
			{
				if ((this._sLocation != value))
				{
					this._sLocation = value;
				}
			}
		}
		
		[Column(Storage="_sSolicitudeType", DbType="VarChar(100)", CanBeNull=false)]
		public string sSolicitudeType
		{
			get
			{
				return this._sSolicitudeType;
			}
			set
			{
				if ((this._sSolicitudeType != value))
				{
					this._sSolicitudeType = value;
				}
			}
		}
		
		[Column(Storage="_dtExpiration", DbType="smalldatetime")]
		public System.Nullable<System.DateTime> dtExpiration
		{
			get
			{
				return this._dtExpiration;
			}
			set
			{
				if ((this._dtExpiration != value))
				{
					this._dtExpiration = value;
				}
			}
		}
		
		[Column(Storage="_dtReceiptInitialDate", DbType="smalldatetime")]
		public System.Nullable<System.DateTime> dtReceiptInitialDate
		{
			get
			{
				return this._dtReceiptInitialDate;
			}
			set
			{
				if ((this._dtReceiptInitialDate != value))
				{
					this._dtReceiptInitialDate = value;
				}
			}
		}
		
		[Column(Storage="_dtReceiptFinalDate", DbType="smalldatetime")]
		public System.Nullable<System.DateTime> dtReceiptFinalDate
		{
			get
			{
				return this._dtReceiptFinalDate;
			}
			set
			{
				if ((this._dtReceiptFinalDate != value))
				{
					this._dtReceiptFinalDate = value;
				}
			}
		}
	}
	
	public partial class Requests_MoneyAccumulatedResult
	{
		
		private string _sSolicitorSurname;
		
		private string _sSolicitorName;
		
		private System.Nullable<decimal> _nMoneyAccumulated;
		
		private System.Nullable<int> _nQuantity;
		
		private System.Nullable<decimal> _nBilledAmount;
		
		private System.Nullable<int> _sIdUsuario;
		
		public Requests_MoneyAccumulatedResult()
		{
		}
		
		[Column(Storage="_sSolicitorSurname", DbType="VarChar(100)", CanBeNull=false)]
		public string sSolicitorSurname
		{
			get
			{
				return this._sSolicitorSurname;
			}
			set
			{
				if ((this._sSolicitorSurname != value))
				{
					this._sSolicitorSurname = value;
				}
			}
		}
		
		[Column(Storage="_sSolicitorName", DbType="VarChar(100)", CanBeNull=false)]
		public string sSolicitorName
		{
			get
			{
				return this._sSolicitorName;
			}
			set
			{
				if ((this._sSolicitorName != value))
				{
					this._sSolicitorName = value;
				}
			}
		}
		
		[Column(Storage="_nMoneyAccumulated", DbType="numeric(18,2)")]
		public System.Nullable<decimal> nMoneyAccumulated
		{
			get
			{
				return this._nMoneyAccumulated;
			}
			set
			{
				if ((this._nMoneyAccumulated != value))
				{
					this._nMoneyAccumulated = value;
				}
			}
		}
		
		[Column(Storage="_nQuantity", DbType="Int")]
		public System.Nullable<int> nQuantity
		{
			get
			{
				return this._nQuantity;
			}
			set
			{
				if ((this._nQuantity != value))
				{
					this._nQuantity = value;
				}
			}
		}
		
		[Column(Storage="_nBilledAmount", DbType="numeric(18,2)")]
		public System.Nullable<decimal> nBilledAmount
		{
			get
			{
				return this._nBilledAmount;
			}
			set
			{
				if ((this._nBilledAmount != value))
				{
					this._nBilledAmount = value;
				}
			}
		}
		
		[Column(Storage="_sIdUsuario", DbType="Int")]
		public System.Nullable<int> sIdUsuario
		{
			get
			{
				return this._sIdUsuario;
			}
			set
			{
				if ((this._sIdUsuario != value))
				{
					this._sIdUsuario = value;
				}
			}
		}
	}
	
	public partial class SolicitudeProductsOfUserResult
	{
		
		private System.DateTime _ReceptionDate;
		
		private string _ProductName;
		
		private int _Ammount;
		
		private string _Status;
		
		private string _Relative;
		
		private string _sSolicitudeType;
		
		private System.Nullable<System.DateTime> _dtExpiration;
		
		private System.Nullable<System.DateTime> _dtReceiptInitialDate;
		
		private System.Nullable<System.DateTime> _dtReceiptFinalDate;
		
		public SolicitudeProductsOfUserResult()
		{
		}
		
		[Column(Storage="_ReceptionDate", DbType="smalldatetime")]
		public System.DateTime ReceptionDate
		{
			get
			{
				return this._ReceptionDate;
			}
			set
			{
				if ((this._ReceptionDate != value))
				{
					this._ReceptionDate = value;
				}
			}
		}
		
		[Column(Storage="_ProductName", DbType="Varchar(200)", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[Column(Storage="_Ammount", DbType="Int")]
		public int Ammount
		{
			get
			{
				return this._Ammount;
			}
			set
			{
				if ((this._Ammount != value))
				{
					this._Ammount = value;
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Varchar(200)", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[Column(Storage="_Relative", DbType="Varchar(200)")]
		public string Relative
		{
			get
			{
				return this._Relative;
			}
			set
			{
				if ((this._Relative != value))
				{
					this._Relative = value;
				}
			}
		}
		
		[Column(Storage="_sSolicitudeType", DbType="VarChar(100)", CanBeNull=false)]
		public string sSolicitudeType
		{
			get
			{
				return this._sSolicitudeType;
			}
			set
			{
				if ((this._sSolicitudeType != value))
				{
					this._sSolicitudeType = value;
				}
			}
		}
		
		[Column(Storage="_dtExpiration", DbType="smalldatetime")]
		public System.Nullable<System.DateTime> dtExpiration
		{
			get
			{
				return this._dtExpiration;
			}
			set
			{
				if ((this._dtExpiration != value))
				{
					this._dtExpiration = value;
				}
			}
		}
		
		[Column(Storage="_dtReceiptInitialDate", DbType="smalldatetime")]
		public System.Nullable<System.DateTime> dtReceiptInitialDate
		{
			get
			{
				return this._dtReceiptInitialDate;
			}
			set
			{
				if ((this._dtReceiptInitialDate != value))
				{
					this._dtReceiptInitialDate = value;
				}
			}
		}
		
		[Column(Storage="_dtReceiptFinalDate", DbType="smalldatetime")]
		public System.Nullable<System.DateTime> dtReceiptFinalDate
		{
			get
			{
				return this._dtReceiptFinalDate;
			}
			set
			{
				if ((this._dtReceiptFinalDate != value))
				{
					this._dtReceiptFinalDate = value;
				}
			}
		}
	}
	
	public partial class SolicitudeProductsOfUserModifyResult
	{
		
		private string _Name;
		
		private int _Dose;
		
		private int _Hours;
		
		private int _Days;
		
		private int _Ammount;
		
		private System.Nullable<decimal> _Value;
		
		private int _ProductID;
		
		public SolicitudeProductsOfUserModifyResult()
		{
		}
		
		[Column(Storage="_Name", DbType="Varchar(200)", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Dose", DbType="Int")]
		public int Dose
		{
			get
			{
				return this._Dose;
			}
			set
			{
				if ((this._Dose != value))
				{
					this._Dose = value;
				}
			}
		}
		
		[Column(Storage="_Hours", DbType="Int")]
		public int Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this._Hours = value;
				}
			}
		}
		
		[Column(Storage="_Days", DbType="Int")]
		public int Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this._Days = value;
				}
			}
		}
		
		[Column(Storage="_Ammount", DbType="Int")]
		public int Ammount
		{
			get
			{
				return this._Ammount;
			}
			set
			{
				if ((this._Ammount != value))
				{
					this._Ammount = value;
				}
			}
		}
		
		[Column(Storage="_Value", DbType="numeric(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[Column(Storage="_ProductID", DbType="Int")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
	}
	
	public partial class SolicitudeFieldsToModifyResult
	{
		
		private System.Nullable<int> _LocationID;
		
		private System.DateTime _ReceptionDate;
		
		private System.DateTime _EndDate;
		
		private int _TreatmentID;
		
		private System.Nullable<int> _RelativeID;
		
		private string _Observations;
		
		private int _IDSolicitor;
		
		public SolicitudeFieldsToModifyResult()
		{
		}
		
		[Column(Storage="_LocationID", DbType="Int")]
		public System.Nullable<int> LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
		
		[Column(Storage="_ReceptionDate", DbType="datetime")]
		public System.DateTime ReceptionDate
		{
			get
			{
				return this._ReceptionDate;
			}
			set
			{
				if ((this._ReceptionDate != value))
				{
					this._ReceptionDate = value;
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="datetime")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[Column(Storage="_TreatmentID", DbType="Int")]
		public int TreatmentID
		{
			get
			{
				return this._TreatmentID;
			}
			set
			{
				if ((this._TreatmentID != value))
				{
					this._TreatmentID = value;
				}
			}
		}
		
		[Column(Storage="_RelativeID", DbType="Int")]
		public System.Nullable<int> RelativeID
		{
			get
			{
				return this._RelativeID;
			}
			set
			{
				if ((this._RelativeID != value))
				{
					this._RelativeID = value;
				}
			}
		}
		
		[Column(Storage="_Observations", DbType="Varchar(200)")]
		public string Observations
		{
			get
			{
				return this._Observations;
			}
			set
			{
				if ((this._Observations != value))
				{
					this._Observations = value;
				}
			}
		}
		
		[Column(Storage="_IDSolicitor", DbType="Int")]
		public int IDSolicitor
		{
			get
			{
				return this._IDSolicitor;
			}
			set
			{
				if ((this._IDSolicitor != value))
				{
					this._IDSolicitor = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
